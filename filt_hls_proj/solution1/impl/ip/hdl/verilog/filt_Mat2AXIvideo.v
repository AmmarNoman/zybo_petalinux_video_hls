// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filt_Mat2AXIvideo (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        img_rows_V_dout,
        img_rows_V_empty_n,
        img_rows_V_read,
        img_cols_V_dout,
        img_cols_V_empty_n,
        img_cols_V_read,
        img_data_stream_0_V_dout,
        img_data_stream_0_V_empty_n,
        img_data_stream_0_V_read,
        img_data_stream_1_V_dout,
        img_data_stream_1_V_empty_n,
        img_data_stream_1_V_read,
        img_data_stream_2_V_dout,
        img_data_stream_2_V_empty_n,
        img_data_stream_2_V_read,
        img_data_stream_3_V_dout,
        img_data_stream_3_V_empty_n,
        img_data_stream_3_V_read,
        dst_axi_TDATA,
        dst_axi_TVALID,
        dst_axi_TREADY,
        dst_axi_TKEEP,
        dst_axi_TSTRB,
        dst_axi_TUSER,
        dst_axi_TLAST,
        dst_axi_TID,
        dst_axi_TDEST
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv10_1 = 10'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [9:0] img_rows_V_dout;
input   img_rows_V_empty_n;
output   img_rows_V_read;
input  [10:0] img_cols_V_dout;
input   img_cols_V_empty_n;
output   img_cols_V_read;
input  [7:0] img_data_stream_0_V_dout;
input   img_data_stream_0_V_empty_n;
output   img_data_stream_0_V_read;
input  [7:0] img_data_stream_1_V_dout;
input   img_data_stream_1_V_empty_n;
output   img_data_stream_1_V_read;
input  [7:0] img_data_stream_2_V_dout;
input   img_data_stream_2_V_empty_n;
output   img_data_stream_2_V_read;
input  [7:0] img_data_stream_3_V_dout;
input   img_data_stream_3_V_empty_n;
output   img_data_stream_3_V_read;
output  [31:0] dst_axi_TDATA;
output   dst_axi_TVALID;
input   dst_axi_TREADY;
output  [3:0] dst_axi_TKEEP;
output  [3:0] dst_axi_TSTRB;
output  [0:0] dst_axi_TUSER;
output  [0:0] dst_axi_TLAST;
output  [0:0] dst_axi_TID;
output  [0:0] dst_axi_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_rows_V_read;
reg img_cols_V_read;
reg img_data_stream_0_V_read;
reg img_data_stream_1_V_read;
reg img_data_stream_2_V_read;
reg img_data_stream_3_V_read;
reg dst_axi_TVALID;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg    img_rows_V_blk_n;
reg    img_cols_V_blk_n;
reg    img_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_75;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg   [0:0] exitcond5_i_reg_290;
reg    img_data_stream_1_V_blk_n;
reg    img_data_stream_2_V_blk_n;
reg    img_data_stream_3_V_blk_n;
reg    dst_axi_TDATA_blk_n;
reg   [9:0] p_3_i_reg_180;
reg   [9:0] img_rows_V_read_reg_266;
reg    ap_sig_99;
reg   [10:0] img_cols_V_read_reg_271;
wire   [10:0] r_V_fu_191_p2;
reg   [10:0] r_V_reg_276;
wire   [0:0] exitcond4_i_fu_206_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_113;
wire   [8:0] i_V_fu_211_p2;
reg   [8:0] i_V_reg_285;
wire   [0:0] exitcond5_i_fu_221_p2;
reg    ap_sig_129;
reg    ap_sig_ioackin_dst_axi_TREADY;
wire   [9:0] j_V_fu_226_p2;
wire   [0:0] axi_last_V_fu_232_p2;
reg   [0:0] axi_last_V_reg_299;
reg   [8:0] p_i_reg_169;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_157;
reg   [0:0] tmp_user_V_fu_100;
reg    ap_reg_ioackin_dst_axi_TREADY;
wire   [9:0] p_cast_cast_i_fu_202_p1;
wire   [10:0] p_3_cast_cast_i_fu_217_p1;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
#0 ap_reg_ioackin_dst_axi_TREADY = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond4_i_fu_206_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_axi_TREADY <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))))) begin
            ap_reg_ioackin_dst_axi_TREADY <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_129) & (1'b1 == dst_axi_TREADY))) begin
            ap_reg_ioackin_dst_axi_TREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))) & ~(1'b0 == exitcond5_i_fu_221_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond4_i_fu_206_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))) & (1'b0 == exitcond5_i_fu_221_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond4_i_fu_206_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))) & ~(1'b0 == exitcond5_i_fu_221_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))) & (1'b0 == exitcond5_i_fu_221_p2))) begin
        p_3_i_reg_180 <= j_V_fu_226_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond4_i_fu_206_p2))) begin
        p_3_i_reg_180 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_99)) begin
        p_i_reg_169 <= ap_const_lv9_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        p_i_reg_169 <= i_V_reg_285;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))))) begin
        tmp_user_V_fu_100 <= 1'b0;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_99)) begin
        tmp_user_V_fu_100 <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))) & (1'b0 == exitcond5_i_fu_221_p2))) begin
        axi_last_V_reg_299 <= axi_last_V_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))))) begin
        exitcond5_i_reg_290 <= exitcond5_i_fu_221_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_285 <= i_V_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_99)) begin
        img_cols_V_read_reg_271 <= img_cols_V_dout;
        img_rows_V_read_reg_266 <= img_rows_V_dout;
        r_V_reg_276 <= r_V_fu_191_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond4_i_fu_206_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond4_i_fu_206_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_75) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_113) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_157) begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_dst_axi_TREADY)) begin
        ap_sig_ioackin_dst_axi_TREADY = dst_axi_TREADY;
    end else begin
        ap_sig_ioackin_dst_axi_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0))) begin
        dst_axi_TDATA_blk_n = dst_axi_TREADY;
    end else begin
        dst_axi_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_129) & (1'b0 == ap_reg_ioackin_dst_axi_TREADY))) begin
        dst_axi_TVALID = 1'b1;
    end else begin
        dst_axi_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        img_cols_V_blk_n = img_cols_V_empty_n;
    end else begin
        img_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_99)) begin
        img_cols_V_read = 1'b1;
    end else begin
        img_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0))) begin
        img_data_stream_0_V_blk_n = img_data_stream_0_V_empty_n;
    end else begin
        img_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))))) begin
        img_data_stream_0_V_read = 1'b1;
    end else begin
        img_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0))) begin
        img_data_stream_1_V_blk_n = img_data_stream_1_V_empty_n;
    end else begin
        img_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))))) begin
        img_data_stream_1_V_read = 1'b1;
    end else begin
        img_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0))) begin
        img_data_stream_2_V_blk_n = img_data_stream_2_V_empty_n;
    end else begin
        img_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))))) begin
        img_data_stream_2_V_read = 1'b1;
    end else begin
        img_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0))) begin
        img_data_stream_3_V_blk_n = img_data_stream_3_V_empty_n;
    end else begin
        img_data_stream_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond5_i_reg_290 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))))) begin
        img_data_stream_3_V_read = 1'b1;
    end else begin
        img_data_stream_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        img_rows_V_blk_n = img_rows_V_empty_n;
    end else begin
        img_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_99)) begin
        img_rows_V_read = 1'b1;
    end else begin
        img_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_99) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond4_i_fu_206_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))) & ~(1'b0 == exitcond5_i_fu_221_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & (ap_sig_129 | ((exitcond5_i_reg_290 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_axi_TREADY)))) & ~(1'b0 == exitcond5_i_fu_221_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_113 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_129 = (((exitcond5_i_reg_290 == 1'b0) & (img_data_stream_0_V_empty_n == 1'b0)) | ((exitcond5_i_reg_290 == 1'b0) & (img_data_stream_1_V_empty_n == 1'b0)) | ((exitcond5_i_reg_290 == 1'b0) & (img_data_stream_2_V_empty_n == 1'b0)) | ((exitcond5_i_reg_290 == 1'b0) & (img_data_stream_3_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_sig_157 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_75 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_99 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (img_rows_V_empty_n == 1'b0) | (img_cols_V_empty_n == 1'b0));
end

assign axi_last_V_fu_232_p2 = ((p_3_cast_cast_i_fu_217_p1 == r_V_reg_276) ? 1'b1 : 1'b0);

assign dst_axi_TDATA = {{{{img_data_stream_3_V_dout}, {img_data_stream_2_V_dout}}, {img_data_stream_1_V_dout}}, {img_data_stream_0_V_dout}};

assign dst_axi_TDEST = 1'b0;

assign dst_axi_TID = 1'b0;

assign dst_axi_TKEEP = ap_const_lv4_F;

assign dst_axi_TLAST = axi_last_V_reg_299;

assign dst_axi_TSTRB = ap_const_lv4_0;

assign dst_axi_TUSER = tmp_user_V_fu_100;

assign exitcond4_i_fu_206_p2 = ((p_cast_cast_i_fu_202_p1 == img_rows_V_read_reg_266) ? 1'b1 : 1'b0);

assign exitcond5_i_fu_221_p2 = ((p_3_cast_cast_i_fu_217_p1 == img_cols_V_read_reg_271) ? 1'b1 : 1'b0);

assign i_V_fu_211_p2 = (p_i_reg_169 + ap_const_lv9_1);

assign j_V_fu_226_p2 = (p_3_i_reg_180 + ap_const_lv10_1);

assign p_3_cast_cast_i_fu_217_p1 = p_3_i_reg_180;

assign p_cast_cast_i_fu_202_p1 = p_i_reg_169;

assign r_V_fu_191_p2 = ($signed(img_cols_V_dout) + $signed(ap_const_lv11_7FF));

endmodule //filt_Mat2AXIvideo
