// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module filt_Split_240_320_6144_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_rows_V_dout,
        src_rows_V_empty_n,
        src_rows_V_read,
        src_cols_V_dout,
        src_cols_V_empty_n,
        src_cols_V_read,
        src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read,
        src_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n,
        src_data_stream_1_V_read,
        src_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n,
        src_data_stream_2_V_read,
        src_data_stream_3_V_dout,
        src_data_stream_3_V_empty_n,
        src_data_stream_3_V_read,
        dst0_data_stream_V_din,
        dst0_data_stream_V_full_n,
        dst0_data_stream_V_write,
        dst1_data_stream_V_din,
        dst1_data_stream_V_full_n,
        dst1_data_stream_V_write,
        dst2_data_stream_V_din,
        dst2_data_stream_V_full_n,
        dst2_data_stream_V_write,
        dst3_data_stream_V_din,
        dst3_data_stream_V_full_n,
        dst3_data_stream_V_write
);

parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv9_1 = 9'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [8:0] src_rows_V_dout;
input   src_rows_V_empty_n;
output   src_rows_V_read;
input  [9:0] src_cols_V_dout;
input   src_cols_V_empty_n;
output   src_cols_V_read;
input  [7:0] src_data_stream_0_V_dout;
input   src_data_stream_0_V_empty_n;
output   src_data_stream_0_V_read;
input  [7:0] src_data_stream_1_V_dout;
input   src_data_stream_1_V_empty_n;
output   src_data_stream_1_V_read;
input  [7:0] src_data_stream_2_V_dout;
input   src_data_stream_2_V_empty_n;
output   src_data_stream_2_V_read;
input  [7:0] src_data_stream_3_V_dout;
input   src_data_stream_3_V_empty_n;
output   src_data_stream_3_V_read;
output  [7:0] dst0_data_stream_V_din;
input   dst0_data_stream_V_full_n;
output   dst0_data_stream_V_write;
output  [7:0] dst1_data_stream_V_din;
input   dst1_data_stream_V_full_n;
output   dst1_data_stream_V_write;
output  [7:0] dst2_data_stream_V_din;
input   dst2_data_stream_V_full_n;
output   dst2_data_stream_V_write;
output  [7:0] dst3_data_stream_V_din;
input   dst3_data_stream_V_full_n;
output   dst3_data_stream_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_rows_V_read;
reg src_cols_V_read;
reg src_data_stream_0_V_read;
reg src_data_stream_1_V_read;
reg src_data_stream_2_V_read;
reg src_data_stream_3_V_read;
reg dst0_data_stream_V_write;
reg dst1_data_stream_V_write;
reg dst2_data_stream_V_write;
reg dst3_data_stream_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg    src_rows_V_blk_n;
reg    src_cols_V_blk_n;
reg    src_data_stream_0_V_blk_n;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_82;
reg    ap_reg_ppiten_pp0_it1;
reg    ap_reg_ppiten_pp0_it0;
reg   [0:0] exitcond_i_reg_217;
reg    src_data_stream_1_V_blk_n;
reg    src_data_stream_2_V_blk_n;
reg    src_data_stream_3_V_blk_n;
reg    dst0_data_stream_V_blk_n;
reg    dst1_data_stream_V_blk_n;
reg    dst2_data_stream_V_blk_n;
reg    dst3_data_stream_V_blk_n;
reg   [8:0] p_3_i_reg_157;
reg   [8:0] src_rows_V_read_reg_198;
reg    ap_sig_109;
reg   [9:0] src_cols_V_read_reg_203;
wire   [0:0] exitcond3_i_fu_172_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_121;
wire   [7:0] i_V_fu_177_p2;
reg   [7:0] i_V_reg_212;
wire   [0:0] exitcond_i_fu_187_p2;
reg    ap_sig_149;
wire   [8:0] j_V_fu_192_p2;
reg   [7:0] p_i_reg_146;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_171;
wire   [8:0] p_cast_cast_i_fu_168_p1;
wire   [9:0] p_3_cast_cast_i_fu_183_p1;
reg   [3:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'b1;
#0 ap_reg_ppiten_pp0_it1 = 1'b0;
#0 ap_reg_ppiten_pp0_it0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond3_i_fu_172_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149) & ~(1'b0 == exitcond_i_fu_187_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond3_i_fu_172_p2))) begin
            ap_reg_ppiten_pp0_it0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149) & (1'b0 == exitcond_i_fu_187_p2))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b1;
        end else if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond3_i_fu_172_p2)) | ((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149) & ~(1'b0 == exitcond_i_fu_187_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149) & (1'b0 == exitcond_i_fu_187_p2))) begin
        p_3_i_reg_157 <= j_V_fu_192_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond3_i_fu_172_p2))) begin
        p_3_i_reg_157 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_109)) begin
        p_i_reg_146 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        p_i_reg_146 <= i_V_reg_212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        exitcond_i_reg_217 <= exitcond_i_fu_187_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_212 <= i_V_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_109)) begin
        src_cols_V_read_reg_203 <= src_cols_V_dout;
        src_rows_V_read_reg_198 <= src_rows_V_dout;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond3_i_fu_172_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond3_i_fu_172_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_121) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_171) begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        dst0_data_stream_V_blk_n = dst0_data_stream_V_full_n;
    end else begin
        dst0_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        dst0_data_stream_V_write = 1'b1;
    end else begin
        dst0_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        dst1_data_stream_V_blk_n = dst1_data_stream_V_full_n;
    end else begin
        dst1_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        dst1_data_stream_V_write = 1'b1;
    end else begin
        dst1_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        dst2_data_stream_V_blk_n = dst2_data_stream_V_full_n;
    end else begin
        dst2_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        dst2_data_stream_V_write = 1'b1;
    end else begin
        dst2_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        dst3_data_stream_V_blk_n = dst3_data_stream_V_full_n;
    end else begin
        dst3_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        dst3_data_stream_V_write = 1'b1;
    end else begin
        dst3_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        src_cols_V_blk_n = src_cols_V_empty_n;
    end else begin
        src_cols_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_109)) begin
        src_cols_V_read = 1'b1;
    end else begin
        src_cols_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n;
    end else begin
        src_data_stream_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        src_data_stream_0_V_read = 1'b1;
    end else begin
        src_data_stream_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n;
    end else begin
        src_data_stream_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        src_data_stream_1_V_read = 1'b1;
    end else begin
        src_data_stream_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        src_data_stream_2_V_blk_n = src_data_stream_2_V_empty_n;
    end else begin
        src_data_stream_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        src_data_stream_2_V_read = 1'b1;
    end else begin
        src_data_stream_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0))) begin
        src_data_stream_3_V_blk_n = src_data_stream_3_V_empty_n;
    end else begin
        src_data_stream_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (1'b1 == ap_reg_ppiten_pp0_it1) & (exitcond_i_reg_217 == 1'b0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149))) begin
        src_data_stream_3_V_read = 1'b1;
    end else begin
        src_data_stream_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        src_rows_V_blk_n = src_rows_V_empty_n;
    end else begin
        src_rows_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_109)) begin
        src_rows_V_read = 1'b1;
    end else begin
        src_rows_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_109) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == exitcond3_i_fu_172_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : begin
            if (~((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149) & ~(1'b0 == exitcond_i_fu_187_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((1'b1 == ap_reg_ppiten_pp0_it0) & ~((1'b1 == ap_reg_ppiten_pp0_it1) & ap_sig_149) & ~(1'b0 == exitcond_i_fu_187_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_109 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (src_rows_V_empty_n == 1'b0) | (src_cols_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_sig_121 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_149 = (((exitcond_i_reg_217 == 1'b0) & (src_data_stream_0_V_empty_n == 1'b0)) | ((exitcond_i_reg_217 == 1'b0) & (src_data_stream_1_V_empty_n == 1'b0)) | ((exitcond_i_reg_217 == 1'b0) & (src_data_stream_2_V_empty_n == 1'b0)) | ((exitcond_i_reg_217 == 1'b0) & (src_data_stream_3_V_empty_n == 1'b0)) | ((exitcond_i_reg_217 == 1'b0) & (dst0_data_stream_V_full_n == 1'b0)) | ((exitcond_i_reg_217 == 1'b0) & (dst1_data_stream_V_full_n == 1'b0)) | ((exitcond_i_reg_217 == 1'b0) & (dst2_data_stream_V_full_n == 1'b0)) | ((exitcond_i_reg_217 == 1'b0) & (dst3_data_stream_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_171 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

assign dst0_data_stream_V_din = src_data_stream_0_V_dout;

assign dst1_data_stream_V_din = src_data_stream_1_V_dout;

assign dst2_data_stream_V_din = src_data_stream_2_V_dout;

assign dst3_data_stream_V_din = src_data_stream_3_V_dout;

assign exitcond3_i_fu_172_p2 = ((p_cast_cast_i_fu_168_p1 == src_rows_V_read_reg_198) ? 1'b1 : 1'b0);

assign exitcond_i_fu_187_p2 = ((p_3_cast_cast_i_fu_183_p1 == src_cols_V_read_reg_203) ? 1'b1 : 1'b0);

assign i_V_fu_177_p2 = (p_i_reg_146 + ap_const_lv8_1);

assign j_V_fu_192_p2 = (p_3_i_reg_157 + ap_const_lv9_1);

assign p_3_cast_cast_i_fu_183_p1 = p_3_i_reg_157;

assign p_cast_cast_i_fu_168_p1 = p_i_reg_146;

endmodule //filt_Split_240_320_6144_0_s
