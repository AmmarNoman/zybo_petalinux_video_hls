// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _filt_AXIvideo2Mat_HH_
#define _filt_AXIvideo2Mat_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct filt_AXIvideo2Mat : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > src_axi_TDATA;
    sc_in< sc_logic > src_axi_TVALID;
    sc_out< sc_logic > src_axi_TREADY;
    sc_in< sc_lv<4> > src_axi_TKEEP;
    sc_in< sc_lv<4> > src_axi_TSTRB;
    sc_in< sc_lv<1> > src_axi_TUSER;
    sc_in< sc_lv<1> > src_axi_TLAST;
    sc_in< sc_lv<1> > src_axi_TID;
    sc_in< sc_lv<1> > src_axi_TDEST;
    sc_in< sc_lv<9> > img_rows_V_dout;
    sc_in< sc_logic > img_rows_V_empty_n;
    sc_out< sc_logic > img_rows_V_read;
    sc_in< sc_lv<10> > img_cols_V_dout;
    sc_in< sc_logic > img_cols_V_empty_n;
    sc_out< sc_logic > img_cols_V_read;
    sc_out< sc_lv<8> > img_data_stream_0_V_din;
    sc_in< sc_logic > img_data_stream_0_V_full_n;
    sc_out< sc_logic > img_data_stream_0_V_write;
    sc_out< sc_lv<8> > img_data_stream_1_V_din;
    sc_in< sc_logic > img_data_stream_1_V_full_n;
    sc_out< sc_logic > img_data_stream_1_V_write;
    sc_out< sc_lv<8> > img_data_stream_2_V_din;
    sc_in< sc_logic > img_data_stream_2_V_full_n;
    sc_out< sc_logic > img_data_stream_2_V_write;
    sc_out< sc_lv<8> > img_data_stream_3_V_din;
    sc_in< sc_logic > img_data_stream_3_V_full_n;
    sc_out< sc_logic > img_data_stream_3_V_write;
    sc_out< sc_lv<9> > img_rows_V_out_din;
    sc_in< sc_logic > img_rows_V_out_full_n;
    sc_out< sc_logic > img_rows_V_out_write;
    sc_out< sc_lv<10> > img_cols_V_out_din;
    sc_in< sc_logic > img_cols_V_out_full_n;
    sc_out< sc_logic > img_cols_V_out_write;


    // Module declarations
    filt_AXIvideo2Mat(sc_module_name name);
    SC_HAS_PROCESS(filt_AXIvideo2Mat);

    ~filt_AXIvideo2Mat();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_25;
    sc_signal< sc_logic > src_axi_TDATA_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_79;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_4;
    sc_signal< bool > ap_sig_86;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_lv<1> > exitcond7_i_fu_365_p2;
    sc_signal< sc_lv<1> > brmerge_i_fu_379_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_5;
    sc_signal< bool > ap_sig_106;
    sc_signal< sc_logic > img_rows_V_blk_n;
    sc_signal< sc_logic > img_cols_V_blk_n;
    sc_signal< sc_logic > img_data_stream_0_V_blk_n;
    sc_signal< sc_lv<1> > exitcond7_i_reg_463;
    sc_signal< sc_logic > img_data_stream_1_V_blk_n;
    sc_signal< sc_logic > img_data_stream_2_V_blk_n;
    sc_signal< sc_logic > img_data_stream_3_V_blk_n;
    sc_signal< sc_logic > img_rows_V_out_blk_n;
    sc_signal< sc_logic > img_cols_V_out_blk_n;
    sc_signal< sc_lv<1> > eol_reg_223;
    sc_signal< sc_lv<32> > axi_data_V_1_i_reg_234;
    sc_signal< sc_lv<9> > p_4_i_reg_245;
    sc_signal< sc_lv<1> > eol_i_reg_256;
    sc_signal< sc_lv<1> > axi_last_V_2_i_reg_268;
    sc_signal< sc_lv<32> > p_Val2_s_reg_281;
    sc_signal< sc_lv<9> > img_rows_V_read_reg_424;
    sc_signal< bool > ap_sig_152;
    sc_signal< sc_lv<10> > img_cols_V_read_reg_429;
    sc_signal< sc_lv<32> > tmp_data_V_reg_434;
    sc_signal< sc_lv<1> > tmp_last_V_reg_442;
    sc_signal< sc_lv<1> > exitcond6_i_fu_350_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_171;
    sc_signal< sc_lv<8> > i_V_fu_355_p2;
    sc_signal< sc_lv<8> > i_V_reg_458;
    sc_signal< bool > ap_sig_176;
    sc_signal< bool > ap_sig_189;
    sc_signal< sc_lv<9> > j_V_fu_370_p2;
    sc_signal< sc_lv<8> > tmp_fu_385_p1;
    sc_signal< sc_lv<8> > tmp_reg_476;
    sc_signal< sc_lv<8> > tmp_108_reg_481;
    sc_signal< sc_lv<8> > tmp_54_reg_486;
    sc_signal< sc_lv<8> > tmp_55_reg_491;
    sc_signal< bool > ap_sig_209;
    sc_signal< sc_lv<1> > axi_last_V_3_i_reg_293;
    sc_signal< sc_lv<1> > axi_last_V1_i_reg_192;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_6;
    sc_signal< bool > ap_sig_227;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_234;
    sc_signal< sc_lv<32> > axi_data_V_3_i_reg_305;
    sc_signal< sc_lv<32> > axi_data_V1_i_reg_202;
    sc_signal< sc_lv<8> > p_i_reg_212;
    sc_signal< sc_lv<1> > eol_phi_fu_226_p4;
    sc_signal< sc_lv<32> > axi_data_V_1_i_phi_fu_237_p4;
    sc_signal< sc_lv<1> > eol_i_phi_fu_260_p4;
    sc_signal< sc_lv<1> > ap_reg_phiprechg_axi_last_V_2_i_reg_268pp1_it0;
    sc_signal< sc_lv<32> > ap_reg_phiprechg_p_Val2_s_reg_281pp1_it0;
    sc_signal< sc_lv<32> > p_Val2_s_phi_fu_285_p4;
    sc_signal< sc_lv<1> > eol_2_i_reg_317;
    sc_signal< sc_lv<1> > sof_1_i_fu_114;
    sc_signal< sc_lv<9> > p_cast_cast_i_fu_346_p1;
    sc_signal< sc_lv<10> > p_4_cast_cast_i_fu_361_p1;
    sc_signal< sc_lv<1> > tmp_user_V_fu_337_p1;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_sig_99;
    sc_signal< bool > ap_sig_255;
    sc_signal< bool > ap_sig_197;
    sc_signal< bool > ap_sig_275;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_pp1_stg0_fsm_4;
    static const sc_lv<7> ap_ST_st7_fsm_5;
    static const sc_lv<7> ap_ST_st8_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1F;
    static const bool ap_true;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_reg_phiprechg_axi_last_V_2_i_reg_268pp1_it0();
    void thread_ap_reg_phiprechg_p_Val2_s_reg_281pp1_it0();
    void thread_ap_sig_106();
    void thread_ap_sig_152();
    void thread_ap_sig_171();
    void thread_ap_sig_176();
    void thread_ap_sig_189();
    void thread_ap_sig_197();
    void thread_ap_sig_209();
    void thread_ap_sig_227();
    void thread_ap_sig_234();
    void thread_ap_sig_25();
    void thread_ap_sig_255();
    void thread_ap_sig_275();
    void thread_ap_sig_79();
    void thread_ap_sig_86();
    void thread_ap_sig_99();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_4();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st7_fsm_5();
    void thread_ap_sig_cseq_ST_st8_fsm_6();
    void thread_axi_data_V_1_i_phi_fu_237_p4();
    void thread_brmerge_i_fu_379_p2();
    void thread_eol_i_phi_fu_260_p4();
    void thread_eol_phi_fu_226_p4();
    void thread_exitcond6_i_fu_350_p2();
    void thread_exitcond7_i_fu_365_p2();
    void thread_i_V_fu_355_p2();
    void thread_img_cols_V_blk_n();
    void thread_img_cols_V_out_blk_n();
    void thread_img_cols_V_out_din();
    void thread_img_cols_V_out_write();
    void thread_img_cols_V_read();
    void thread_img_data_stream_0_V_blk_n();
    void thread_img_data_stream_0_V_din();
    void thread_img_data_stream_0_V_write();
    void thread_img_data_stream_1_V_blk_n();
    void thread_img_data_stream_1_V_din();
    void thread_img_data_stream_1_V_write();
    void thread_img_data_stream_2_V_blk_n();
    void thread_img_data_stream_2_V_din();
    void thread_img_data_stream_2_V_write();
    void thread_img_data_stream_3_V_blk_n();
    void thread_img_data_stream_3_V_din();
    void thread_img_data_stream_3_V_write();
    void thread_img_rows_V_blk_n();
    void thread_img_rows_V_out_blk_n();
    void thread_img_rows_V_out_din();
    void thread_img_rows_V_out_write();
    void thread_img_rows_V_read();
    void thread_j_V_fu_370_p2();
    void thread_p_4_cast_cast_i_fu_361_p1();
    void thread_p_Val2_s_phi_fu_285_p4();
    void thread_p_cast_cast_i_fu_346_p1();
    void thread_src_axi_TDATA_blk_n();
    void thread_src_axi_TREADY();
    void thread_tmp_fu_385_p1();
    void thread_tmp_user_V_fu_337_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
