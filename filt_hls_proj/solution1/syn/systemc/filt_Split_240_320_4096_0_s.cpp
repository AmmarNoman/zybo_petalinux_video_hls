// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "filt_Split_240_320_4096_0_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic filt_Split_240_320_4096_0_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic filt_Split_240_320_4096_0_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> filt_Split_240_320_4096_0_s::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> filt_Split_240_320_4096_0_s::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> filt_Split_240_320_4096_0_s::ap_ST_pp0_stg0_fsm_2 = "100";
const sc_lv<4> filt_Split_240_320_4096_0_s::ap_ST_st5_fsm_3 = "1000";
const sc_lv<32> filt_Split_240_320_4096_0_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> filt_Split_240_320_4096_0_s::ap_const_lv1_1 = "1";
const sc_lv<32> filt_Split_240_320_4096_0_s::ap_const_lv32_2 = "10";
const sc_lv<1> filt_Split_240_320_4096_0_s::ap_const_lv1_0 = "0";
const sc_lv<32> filt_Split_240_320_4096_0_s::ap_const_lv32_1 = "1";
const sc_lv<32> filt_Split_240_320_4096_0_s::ap_const_lv32_3 = "11";
const sc_lv<8> filt_Split_240_320_4096_0_s::ap_const_lv8_0 = "00000000";
const sc_lv<9> filt_Split_240_320_4096_0_s::ap_const_lv9_0 = "000000000";
const sc_lv<8> filt_Split_240_320_4096_0_s::ap_const_lv8_F0 = "11110000";
const sc_lv<8> filt_Split_240_320_4096_0_s::ap_const_lv8_1 = "1";
const sc_lv<9> filt_Split_240_320_4096_0_s::ap_const_lv9_140 = "101000000";
const sc_lv<9> filt_Split_240_320_4096_0_s::ap_const_lv9_1 = "1";

filt_Split_240_320_4096_0_s::filt_Split_240_320_4096_0_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond4_fu_132_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( exitcond4_fu_132_p2 );
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_ap_sig_106);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( dst0_data_stream_V_full_n );
    sensitive << ( dst1_data_stream_V_full_n );
    sensitive << ( dst2_data_stream_V_full_n );
    sensitive << ( exitcond_reg_165 );

    SC_METHOD(thread_ap_sig_128);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_134);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_sig_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_84);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_2);
    sensitive << ( ap_sig_59 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_84 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_3);
    sensitive << ( ap_sig_128 );

    SC_METHOD(thread_dst0_data_stream_V_blk_n);
    sensitive << ( dst0_data_stream_V_full_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );

    SC_METHOD(thread_dst0_data_stream_V_din);
    sensitive << ( src_data_stream_0_V_dout );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_dst0_data_stream_V_write);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_dst1_data_stream_V_blk_n);
    sensitive << ( dst1_data_stream_V_full_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );

    SC_METHOD(thread_dst1_data_stream_V_din);
    sensitive << ( src_data_stream_1_V_dout );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_dst1_data_stream_V_write);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_dst2_data_stream_V_blk_n);
    sensitive << ( dst2_data_stream_V_full_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );

    SC_METHOD(thread_dst2_data_stream_V_din);
    sensitive << ( src_data_stream_2_V_dout );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_dst2_data_stream_V_write);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_exitcond4_fu_132_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( p_s_reg_110 );

    SC_METHOD(thread_exitcond_fu_144_p2);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( p_4_reg_121 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_i_V_fu_138_p2);
    sensitive << ( p_s_reg_110 );

    SC_METHOD(thread_j_V_fu_150_p2);
    sensitive << ( p_4_reg_121 );

    SC_METHOD(thread_src_data_stream_0_V_blk_n);
    sensitive << ( src_data_stream_0_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );

    SC_METHOD(thread_src_data_stream_0_V_read);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_src_data_stream_1_V_blk_n);
    sensitive << ( src_data_stream_1_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );

    SC_METHOD(thread_src_data_stream_1_V_read);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_src_data_stream_2_V_blk_n);
    sensitive << ( src_data_stream_2_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );

    SC_METHOD(thread_src_data_stream_2_V_read);
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond_reg_165 );
    sensitive << ( ap_sig_106 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond4_fu_132_p2 );
    sensitive << ( exitcond_fu_144_p2 );
    sensitive << ( ap_sig_106 );
    sensitive << ( ap_sig_134 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "filt_Split_240_320_4096_0_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, src_data_stream_0_V_dout, "(port)src_data_stream_0_V_dout");
    sc_trace(mVcdFile, src_data_stream_0_V_empty_n, "(port)src_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_0_V_read, "(port)src_data_stream_0_V_read");
    sc_trace(mVcdFile, src_data_stream_1_V_dout, "(port)src_data_stream_1_V_dout");
    sc_trace(mVcdFile, src_data_stream_1_V_empty_n, "(port)src_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_1_V_read, "(port)src_data_stream_1_V_read");
    sc_trace(mVcdFile, src_data_stream_2_V_dout, "(port)src_data_stream_2_V_dout");
    sc_trace(mVcdFile, src_data_stream_2_V_empty_n, "(port)src_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, src_data_stream_2_V_read, "(port)src_data_stream_2_V_read");
    sc_trace(mVcdFile, dst0_data_stream_V_din, "(port)dst0_data_stream_V_din");
    sc_trace(mVcdFile, dst0_data_stream_V_full_n, "(port)dst0_data_stream_V_full_n");
    sc_trace(mVcdFile, dst0_data_stream_V_write, "(port)dst0_data_stream_V_write");
    sc_trace(mVcdFile, dst1_data_stream_V_din, "(port)dst1_data_stream_V_din");
    sc_trace(mVcdFile, dst1_data_stream_V_full_n, "(port)dst1_data_stream_V_full_n");
    sc_trace(mVcdFile, dst1_data_stream_V_write, "(port)dst1_data_stream_V_write");
    sc_trace(mVcdFile, dst2_data_stream_V_din, "(port)dst2_data_stream_V_din");
    sc_trace(mVcdFile, dst2_data_stream_V_full_n, "(port)dst2_data_stream_V_full_n");
    sc_trace(mVcdFile, dst2_data_stream_V_write, "(port)dst2_data_stream_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_22, "ap_sig_22");
    sc_trace(mVcdFile, src_data_stream_0_V_blk_n, "src_data_stream_0_V_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_2, "ap_sig_cseq_ST_pp0_stg0_fsm_2");
    sc_trace(mVcdFile, ap_sig_59, "ap_sig_59");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, exitcond_reg_165, "exitcond_reg_165");
    sc_trace(mVcdFile, src_data_stream_1_V_blk_n, "src_data_stream_1_V_blk_n");
    sc_trace(mVcdFile, src_data_stream_2_V_blk_n, "src_data_stream_2_V_blk_n");
    sc_trace(mVcdFile, dst0_data_stream_V_blk_n, "dst0_data_stream_V_blk_n");
    sc_trace(mVcdFile, dst1_data_stream_V_blk_n, "dst1_data_stream_V_blk_n");
    sc_trace(mVcdFile, dst2_data_stream_V_blk_n, "dst2_data_stream_V_blk_n");
    sc_trace(mVcdFile, p_4_reg_121, "p_4_reg_121");
    sc_trace(mVcdFile, exitcond4_fu_132_p2, "exitcond4_fu_132_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_84, "ap_sig_84");
    sc_trace(mVcdFile, i_V_fu_138_p2, "i_V_fu_138_p2");
    sc_trace(mVcdFile, i_V_reg_160, "i_V_reg_160");
    sc_trace(mVcdFile, exitcond_fu_144_p2, "exitcond_fu_144_p2");
    sc_trace(mVcdFile, ap_sig_106, "ap_sig_106");
    sc_trace(mVcdFile, j_V_fu_150_p2, "j_V_fu_150_p2");
    sc_trace(mVcdFile, p_s_reg_110, "p_s_reg_110");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_3, "ap_sig_cseq_ST_st5_fsm_3");
    sc_trace(mVcdFile, ap_sig_128, "ap_sig_128");
    sc_trace(mVcdFile, ap_sig_134, "ap_sig_134");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

filt_Split_240_320_4096_0_s::~filt_Split_240_320_4096_0_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void filt_Split_240_320_4096_0_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_132_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_144_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_132_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_144_p2.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                     esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_132_p2.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()) && 
                     !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_144_p2.read())))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_144_p2.read()))) {
        p_4_reg_121 = j_V_fu_150_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_132_p2.read()))) {
        p_4_reg_121 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !ap_sig_134.read())) {
        p_s_reg_110 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read())) {
        p_s_reg_110 = i_V_reg_160.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()))) {
        exitcond_reg_165 = exitcond_fu_144_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_V_reg_160 = i_V_fu_138_p2.read();
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_done_reg.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_132_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_132_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_106() {
    ap_sig_106 = ((esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(src_data_stream_0_V_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(src_data_stream_1_V_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(src_data_stream_2_V_empty_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(dst0_data_stream_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(dst1_data_stream_V_full_n.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(dst2_data_stream_V_full_n.read(), ap_const_logic_0)));
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_128() {
    ap_sig_128 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_134() {
    ap_sig_134 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_22() {
    ap_sig_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_59() {
    ap_sig_59 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_84() {
    ap_sig_84 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_cseq_ST_pp0_stg0_fsm_2() {
    if (ap_sig_59.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_84.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_sig_cseq_ST_st5_fsm_3() {
    if (ap_sig_128.read()) {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_dst0_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0))) {
        dst0_data_stream_V_blk_n = dst0_data_stream_V_full_n.read();
    } else {
        dst0_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void filt_Split_240_320_4096_0_s::thread_dst0_data_stream_V_din() {
    dst0_data_stream_V_din = src_data_stream_0_V_dout.read();
}

void filt_Split_240_320_4096_0_s::thread_dst0_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()))) {
        dst0_data_stream_V_write = ap_const_logic_1;
    } else {
        dst0_data_stream_V_write = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_dst1_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0))) {
        dst1_data_stream_V_blk_n = dst1_data_stream_V_full_n.read();
    } else {
        dst1_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void filt_Split_240_320_4096_0_s::thread_dst1_data_stream_V_din() {
    dst1_data_stream_V_din = src_data_stream_1_V_dout.read();
}

void filt_Split_240_320_4096_0_s::thread_dst1_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()))) {
        dst1_data_stream_V_write = ap_const_logic_1;
    } else {
        dst1_data_stream_V_write = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_dst2_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0))) {
        dst2_data_stream_V_blk_n = dst2_data_stream_V_full_n.read();
    } else {
        dst2_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void filt_Split_240_320_4096_0_s::thread_dst2_data_stream_V_din() {
    dst2_data_stream_V_din = src_data_stream_2_V_dout.read();
}

void filt_Split_240_320_4096_0_s::thread_dst2_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()))) {
        dst2_data_stream_V_write = ap_const_logic_1;
    } else {
        dst2_data_stream_V_write = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_exitcond4_fu_132_p2() {
    exitcond4_fu_132_p2 = (!p_s_reg_110.read().is_01() || !ap_const_lv8_F0.is_01())? sc_lv<1>(): sc_lv<1>(p_s_reg_110.read() == ap_const_lv8_F0);
}

void filt_Split_240_320_4096_0_s::thread_exitcond_fu_144_p2() {
    exitcond_fu_144_p2 = (!p_4_reg_121.read().is_01() || !ap_const_lv9_140.is_01())? sc_lv<1>(): sc_lv<1>(p_4_reg_121.read() == ap_const_lv9_140);
}

void filt_Split_240_320_4096_0_s::thread_i_V_fu_138_p2() {
    i_V_fu_138_p2 = (!p_s_reg_110.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(p_s_reg_110.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void filt_Split_240_320_4096_0_s::thread_j_V_fu_150_p2() {
    j_V_fu_150_p2 = (!p_4_reg_121.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(p_4_reg_121.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void filt_Split_240_320_4096_0_s::thread_src_data_stream_0_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0))) {
        src_data_stream_0_V_blk_n = src_data_stream_0_V_empty_n.read();
    } else {
        src_data_stream_0_V_blk_n = ap_const_logic_1;
    }
}

void filt_Split_240_320_4096_0_s::thread_src_data_stream_0_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()))) {
        src_data_stream_0_V_read = ap_const_logic_1;
    } else {
        src_data_stream_0_V_read = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_src_data_stream_1_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0))) {
        src_data_stream_1_V_blk_n = src_data_stream_1_V_empty_n.read();
    } else {
        src_data_stream_1_V_blk_n = ap_const_logic_1;
    }
}

void filt_Split_240_320_4096_0_s::thread_src_data_stream_1_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()))) {
        src_data_stream_1_V_read = ap_const_logic_1;
    } else {
        src_data_stream_1_V_read = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_src_data_stream_2_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0))) {
        src_data_stream_2_V_blk_n = src_data_stream_2_V_empty_n.read();
    } else {
        src_data_stream_2_V_blk_n = ap_const_logic_1;
    }
}

void filt_Split_240_320_4096_0_s::thread_src_data_stream_2_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         esl_seteq<1,1,1>(exitcond_reg_165.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()))) {
        src_data_stream_2_V_read = ap_const_logic_1;
    } else {
        src_data_stream_2_V_read = ap_const_logic_0;
    }
}

void filt_Split_240_320_4096_0_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!ap_sig_134.read()) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_132_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_144_p2.read()))) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_106.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_144_p2.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

