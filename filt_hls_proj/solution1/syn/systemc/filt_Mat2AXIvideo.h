// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _filt_Mat2AXIvideo_HH_
#define _filt_Mat2AXIvideo_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct filt_Mat2AXIvideo : public sc_module {
    // Port declarations 34
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<10> > img_rows_V_dout;
    sc_in< sc_logic > img_rows_V_empty_n;
    sc_out< sc_logic > img_rows_V_read;
    sc_in< sc_lv<11> > img_cols_V_dout;
    sc_in< sc_logic > img_cols_V_empty_n;
    sc_out< sc_logic > img_cols_V_read;
    sc_in< sc_lv<8> > img_data_stream_0_V_dout;
    sc_in< sc_logic > img_data_stream_0_V_empty_n;
    sc_out< sc_logic > img_data_stream_0_V_read;
    sc_in< sc_lv<8> > img_data_stream_1_V_dout;
    sc_in< sc_logic > img_data_stream_1_V_empty_n;
    sc_out< sc_logic > img_data_stream_1_V_read;
    sc_in< sc_lv<8> > img_data_stream_2_V_dout;
    sc_in< sc_logic > img_data_stream_2_V_empty_n;
    sc_out< sc_logic > img_data_stream_2_V_read;
    sc_in< sc_lv<8> > img_data_stream_3_V_dout;
    sc_in< sc_logic > img_data_stream_3_V_empty_n;
    sc_out< sc_logic > img_data_stream_3_V_read;
    sc_out< sc_lv<32> > dst_axi_TDATA;
    sc_out< sc_logic > dst_axi_TVALID;
    sc_in< sc_logic > dst_axi_TREADY;
    sc_out< sc_lv<4> > dst_axi_TKEEP;
    sc_out< sc_lv<4> > dst_axi_TSTRB;
    sc_out< sc_lv<1> > dst_axi_TUSER;
    sc_out< sc_lv<1> > dst_axi_TLAST;
    sc_out< sc_lv<1> > dst_axi_TID;
    sc_out< sc_lv<1> > dst_axi_TDEST;


    // Module declarations
    filt_Mat2AXIvideo(sc_module_name name);
    SC_HAS_PROCESS(filt_Mat2AXIvideo);

    ~filt_Mat2AXIvideo();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_22;
    sc_signal< sc_logic > img_rows_V_blk_n;
    sc_signal< sc_logic > img_cols_V_blk_n;
    sc_signal< sc_logic > img_data_stream_0_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_2;
    sc_signal< bool > ap_sig_75;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond5_i_reg_290;
    sc_signal< sc_logic > img_data_stream_1_V_blk_n;
    sc_signal< sc_logic > img_data_stream_2_V_blk_n;
    sc_signal< sc_logic > img_data_stream_3_V_blk_n;
    sc_signal< sc_logic > dst_axi_TDATA_blk_n;
    sc_signal< sc_lv<10> > p_3_i_reg_180;
    sc_signal< sc_lv<10> > img_rows_V_read_reg_266;
    sc_signal< bool > ap_sig_99;
    sc_signal< sc_lv<11> > img_cols_V_read_reg_271;
    sc_signal< sc_lv<11> > r_V_fu_191_p2;
    sc_signal< sc_lv<11> > r_V_reg_276;
    sc_signal< sc_lv<1> > exitcond4_i_fu_206_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_113;
    sc_signal< sc_lv<9> > i_V_fu_211_p2;
    sc_signal< sc_lv<9> > i_V_reg_285;
    sc_signal< sc_lv<1> > exitcond5_i_fu_221_p2;
    sc_signal< bool > ap_sig_129;
    sc_signal< sc_logic > ap_sig_ioackin_dst_axi_TREADY;
    sc_signal< sc_lv<10> > j_V_fu_226_p2;
    sc_signal< sc_lv<1> > axi_last_V_fu_232_p2;
    sc_signal< sc_lv<1> > axi_last_V_reg_299;
    sc_signal< sc_lv<9> > p_i_reg_169;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_3;
    sc_signal< bool > ap_sig_157;
    sc_signal< sc_lv<1> > tmp_user_V_fu_100;
    sc_signal< sc_logic > ap_reg_ioackin_dst_axi_TREADY;
    sc_signal< sc_lv<10> > p_cast_cast_i_fu_202_p1;
    sc_signal< sc_lv<11> > p_3_cast_cast_i_fu_217_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<4> ap_ST_st5_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<10> ap_const_lv10_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_113();
    void thread_ap_sig_129();
    void thread_ap_sig_157();
    void thread_ap_sig_22();
    void thread_ap_sig_75();
    void thread_ap_sig_99();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st5_fsm_3();
    void thread_ap_sig_ioackin_dst_axi_TREADY();
    void thread_axi_last_V_fu_232_p2();
    void thread_dst_axi_TDATA();
    void thread_dst_axi_TDATA_blk_n();
    void thread_dst_axi_TDEST();
    void thread_dst_axi_TID();
    void thread_dst_axi_TKEEP();
    void thread_dst_axi_TLAST();
    void thread_dst_axi_TSTRB();
    void thread_dst_axi_TUSER();
    void thread_dst_axi_TVALID();
    void thread_exitcond4_i_fu_206_p2();
    void thread_exitcond5_i_fu_221_p2();
    void thread_i_V_fu_211_p2();
    void thread_img_cols_V_blk_n();
    void thread_img_cols_V_read();
    void thread_img_data_stream_0_V_blk_n();
    void thread_img_data_stream_0_V_read();
    void thread_img_data_stream_1_V_blk_n();
    void thread_img_data_stream_1_V_read();
    void thread_img_data_stream_2_V_blk_n();
    void thread_img_data_stream_2_V_read();
    void thread_img_data_stream_3_V_blk_n();
    void thread_img_data_stream_3_V_read();
    void thread_img_rows_V_blk_n();
    void thread_img_rows_V_read();
    void thread_j_V_fu_226_p2();
    void thread_p_3_cast_cast_i_fu_217_p1();
    void thread_p_cast_cast_i_fu_202_p1();
    void thread_r_V_fu_191_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
