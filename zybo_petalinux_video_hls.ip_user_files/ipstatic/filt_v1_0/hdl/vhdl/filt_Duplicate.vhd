-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filt_Duplicate is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_data_stream_0_V_read : OUT STD_LOGIC;
    src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_1_V_empty_n : IN STD_LOGIC;
    src_data_stream_1_V_read : OUT STD_LOGIC;
    src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_2_V_empty_n : IN STD_LOGIC;
    src_data_stream_2_V_read : OUT STD_LOGIC;
    dst1_0_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst1_0_data_stream_V_full_n : IN STD_LOGIC;
    dst1_0_data_stream_V_write : OUT STD_LOGIC;
    dst1_1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst1_1_data_stream_V_full_n : IN STD_LOGIC;
    dst1_1_data_stream_V_write : OUT STD_LOGIC;
    dst1_2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst1_2_data_stream_V_full_n : IN STD_LOGIC;
    dst1_2_data_stream_V_write : OUT STD_LOGIC;
    dst2_0_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst2_0_data_stream_V_full_n : IN STD_LOGIC;
    dst2_0_data_stream_V_write : OUT STD_LOGIC;
    dst2_1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst2_1_data_stream_V_full_n : IN STD_LOGIC;
    dst2_1_data_stream_V_write : OUT STD_LOGIC;
    dst2_2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst2_2_data_stream_V_full_n : IN STD_LOGIC;
    dst2_2_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of filt_Duplicate is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_st5_fsm_3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv8_F0 : STD_LOGIC_VECTOR (7 downto 0) := "11110000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_21 : BOOLEAN;
    signal src_data_stream_0_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_68 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal exitcond_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_data_stream_1_V_blk_n : STD_LOGIC;
    signal src_data_stream_2_V_blk_n : STD_LOGIC;
    signal dst1_0_data_stream_V_blk_n : STD_LOGIC;
    signal dst1_1_data_stream_V_blk_n : STD_LOGIC;
    signal dst1_2_data_stream_V_blk_n : STD_LOGIC;
    signal dst2_0_data_stream_V_blk_n : STD_LOGIC;
    signal dst2_1_data_stream_V_blk_n : STD_LOGIC;
    signal dst2_2_data_stream_V_blk_n : STD_LOGIC;
    signal p_4_reg_151 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond8_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_96 : BOOLEAN;
    signal i_V_fu_168_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_V_reg_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_127 : BOOLEAN;
    signal j_V_fu_180_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_s_reg_140 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_3 : STD_LOGIC;
    signal ap_sig_153 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)) and not((ap_const_lv1_0 = exitcond_fu_174_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond8_fu_162_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)) and (ap_const_lv1_0 = exitcond_fu_174_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond8_fu_162_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)) and not((ap_const_lv1_0 = exitcond_fu_174_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_4_reg_151_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)) and (ap_const_lv1_0 = exitcond_fu_174_p2))) then 
                p_4_reg_151 <= j_V_fu_180_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = exitcond8_fu_162_p2))) then 
                p_4_reg_151 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    p_s_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_3)) then 
                p_s_reg_140 <= i_V_reg_190;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                p_s_reg_140 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then
                exitcond_reg_195 <= exitcond_fu_174_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_V_reg_190 <= i_V_fu_168_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, exitcond8_fu_162_p2, exitcond_fu_174_p2, ap_sig_127)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_lv1_0 = exitcond8_fu_162_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)) and not((ap_const_lv1_0 = exitcond_fu_174_p2))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)) and not((ap_const_lv1_0 = exitcond_fu_174_p2)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_st5_fsm_3 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, exitcond8_fu_162_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond8_fu_162_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(exitcond8_fu_162_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = exitcond8_fu_162_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_127_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, src_data_stream_2_V_empty_n, dst1_0_data_stream_V_full_n, dst1_1_data_stream_V_full_n, dst1_2_data_stream_V_full_n, dst2_0_data_stream_V_full_n, dst2_1_data_stream_V_full_n, dst2_2_data_stream_V_full_n, exitcond_reg_195)
    begin
                ap_sig_127 <= (((exitcond_reg_195 = ap_const_lv1_0) and (src_data_stream_0_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (src_data_stream_1_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (src_data_stream_2_V_empty_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (dst1_0_data_stream_V_full_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (dst1_1_data_stream_V_full_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (dst1_2_data_stream_V_full_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (dst2_0_data_stream_V_full_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (dst2_1_data_stream_V_full_n = ap_const_logic_0)) or ((exitcond_reg_195 = ap_const_lv1_0) and (dst2_2_data_stream_V_full_n = ap_const_logic_0)));
    end process;


    ap_sig_153_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_153 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_21_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_21 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_68_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_68 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_96_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_96 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_68)
    begin
        if (ap_sig_68) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_21)
    begin
        if (ap_sig_21) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_96)
    begin
        if (ap_sig_96) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_3_assign_proc : process(ap_sig_153)
    begin
        if (ap_sig_153) then 
            ap_sig_cseq_ST_st5_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    dst1_0_data_stream_V_blk_n_assign_proc : process(dst1_0_data_stream_V_full_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            dst1_0_data_stream_V_blk_n <= dst1_0_data_stream_V_full_n;
        else 
            dst1_0_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst1_0_data_stream_V_din <= src_data_stream_0_V_dout;

    dst1_0_data_stream_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            dst1_0_data_stream_V_write <= ap_const_logic_1;
        else 
            dst1_0_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst1_1_data_stream_V_blk_n_assign_proc : process(dst1_1_data_stream_V_full_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            dst1_1_data_stream_V_blk_n <= dst1_1_data_stream_V_full_n;
        else 
            dst1_1_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst1_1_data_stream_V_din <= src_data_stream_1_V_dout;

    dst1_1_data_stream_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            dst1_1_data_stream_V_write <= ap_const_logic_1;
        else 
            dst1_1_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst1_2_data_stream_V_blk_n_assign_proc : process(dst1_2_data_stream_V_full_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            dst1_2_data_stream_V_blk_n <= dst1_2_data_stream_V_full_n;
        else 
            dst1_2_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst1_2_data_stream_V_din <= src_data_stream_2_V_dout;

    dst1_2_data_stream_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            dst1_2_data_stream_V_write <= ap_const_logic_1;
        else 
            dst1_2_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst2_0_data_stream_V_blk_n_assign_proc : process(dst2_0_data_stream_V_full_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            dst2_0_data_stream_V_blk_n <= dst2_0_data_stream_V_full_n;
        else 
            dst2_0_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst2_0_data_stream_V_din <= src_data_stream_0_V_dout;

    dst2_0_data_stream_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            dst2_0_data_stream_V_write <= ap_const_logic_1;
        else 
            dst2_0_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst2_1_data_stream_V_blk_n_assign_proc : process(dst2_1_data_stream_V_full_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            dst2_1_data_stream_V_blk_n <= dst2_1_data_stream_V_full_n;
        else 
            dst2_1_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst2_1_data_stream_V_din <= src_data_stream_1_V_dout;

    dst2_1_data_stream_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            dst2_1_data_stream_V_write <= ap_const_logic_1;
        else 
            dst2_1_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;


    dst2_2_data_stream_V_blk_n_assign_proc : process(dst2_2_data_stream_V_full_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            dst2_2_data_stream_V_blk_n <= dst2_2_data_stream_V_full_n;
        else 
            dst2_2_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst2_2_data_stream_V_din <= src_data_stream_2_V_dout;

    dst2_2_data_stream_V_write_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            dst2_2_data_stream_V_write <= ap_const_logic_1;
        else 
            dst2_2_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    exitcond8_fu_162_p2 <= "1" when (p_s_reg_140 = ap_const_lv8_F0) else "0";
    exitcond_fu_174_p2 <= "1" when (p_4_reg_151 = ap_const_lv9_140) else "0";
    i_V_fu_168_p2 <= std_logic_vector(unsigned(p_s_reg_140) + unsigned(ap_const_lv8_1));
    j_V_fu_180_p2 <= std_logic_vector(unsigned(p_4_reg_151) + unsigned(ap_const_lv9_1));

    src_data_stream_0_V_blk_n_assign_proc : process(src_data_stream_0_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            src_data_stream_0_V_blk_n <= src_data_stream_0_V_empty_n;
        else 
            src_data_stream_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_0_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src_data_stream_1_V_blk_n_assign_proc : process(src_data_stream_1_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            src_data_stream_1_V_blk_n <= src_data_stream_1_V_empty_n;
        else 
            src_data_stream_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_1_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src_data_stream_2_V_blk_n_assign_proc : process(src_data_stream_2_V_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0))) then 
            src_data_stream_2_V_blk_n <= src_data_stream_2_V_empty_n;
        else 
            src_data_stream_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_stream_2_V_read_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, exitcond_reg_195, ap_sig_127)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond_reg_195 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_127)))) then 
            src_data_stream_2_V_read <= ap_const_logic_1;
        else 
            src_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
