-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filt_Block_codeRepl6265_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_chs_0_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_chs_0_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_chs_0_data_stream_0_V_read : OUT STD_LOGIC;
    src_chs_1_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_chs_1_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_chs_1_data_stream_0_V_read : OUT STD_LOGIC;
    src_chs_2_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_chs_2_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_chs_2_data_stream_0_V_read : OUT STD_LOGIC;
    sel_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    sel_empty_n : IN STD_LOGIC;
    sel_read : OUT STD_LOGIC;
    wrk_src_mat_rows_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
    wrk_src_mat_rows_V_empty_n : IN STD_LOGIC;
    wrk_src_mat_rows_V_read : OUT STD_LOGIC;
    wrk_src_mat_cols_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    wrk_src_mat_cols_V_empty_n : IN STD_LOGIC;
    wrk_src_mat_cols_V_read : OUT STD_LOGIC;
    dst_chs_0_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_chs_0_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_chs_0_data_stream_0_V_write : OUT STD_LOGIC;
    dst_chs_1_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_chs_1_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_chs_1_data_stream_0_V_write : OUT STD_LOGIC;
    dst_chs_2_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_chs_2_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_chs_2_data_stream_0_V_write : OUT STD_LOGIC );
end;


architecture behav of filt_Block_codeRepl6265_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_26 : BOOLEAN;
    signal sel_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_75 : BOOLEAN;
    signal wrk_src_mat_rows_V_blk_n : STD_LOGIC;
    signal wrk_src_mat_cols_V_blk_n : STD_LOGIC;
    signal wrk_src_mat_rows_V_read_reg_202 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_86 : BOOLEAN;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done : STD_LOGIC;
    signal wrk_src_mat_cols_V_read_reg_208 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_filt_CvtColor_fu_104_ap_start : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_ap_done : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_ap_idle : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_ap_ready : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_p_src_data_stream_0_V_read : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_p_src_data_stream_1_V_read : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_p_src_data_stream_2_V_read : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_write : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_write : STD_LOGIC;
    signal grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_write : STD_LOGIC;
    signal grp_filt_AddS_fu_116_ap_start : STD_LOGIC;
    signal grp_filt_AddS_fu_116_ap_done : STD_LOGIC;
    signal grp_filt_AddS_fu_116_ap_idle : STD_LOGIC;
    signal grp_filt_AddS_fu_116_ap_ready : STD_LOGIC;
    signal grp_filt_AddS_fu_116_src_data_stream_0_V_read : STD_LOGIC;
    signal grp_filt_AddS_fu_116_src_data_stream_1_V_read : STD_LOGIC;
    signal grp_filt_AddS_fu_116_src_data_stream_2_V_read : STD_LOGIC;
    signal grp_filt_AddS_fu_116_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_AddS_fu_116_dst_data_stream_0_V_write : STD_LOGIC;
    signal grp_filt_AddS_fu_116_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_AddS_fu_116_dst_data_stream_1_V_write : STD_LOGIC;
    signal grp_filt_AddS_fu_116_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_AddS_fu_116_dst_data_stream_2_V_write : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_ap_idle : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_ap_ready : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_src0_data_stream_V_read : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_src1_data_stream_V_read : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_src2_data_stream_V_read : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_0_V_write : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_1_V_write : STD_LOGIC;
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_2_V_write : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_ap_start : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_ap_done : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_ap_idle : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_ap_ready : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_0_V_read : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_1_V_read : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_2_V_read : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_dst0_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_Split_240_320_4096_0_s_fu_141_dst0_data_stream_V_write : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_dst1_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_Split_240_320_4096_0_s_fu_141_dst1_data_stream_V_write : STD_LOGIC;
    signal grp_filt_Split_240_320_4096_0_s_fu_141_dst2_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filt_Split_240_320_4096_0_s_fu_141_dst2_data_stream_V_write : STD_LOGIC;
    signal ap_reg_grp_filt_CvtColor_fu_104_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_200 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_207 : BOOLEAN;
    signal wrk_src_mat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_src_mat_data_stream_0_V_empty_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_0_V_read : STD_LOGIC;
    signal wrk_src_mat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_src_mat_data_stream_1_V_empty_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_1_V_read : STD_LOGIC;
    signal wrk_src_mat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_src_mat_data_stream_2_V_empty_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_2_V_read : STD_LOGIC;
    signal wrk_dst_mat_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_0_V_full_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_0_V_write : STD_LOGIC;
    signal wrk_dst_mat_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_1_V_full_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_1_V_write : STD_LOGIC;
    signal wrk_dst_mat_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_2_V_full_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_2_V_write : STD_LOGIC;
    signal ap_reg_grp_filt_AddS_fu_116_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_240 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_247 : BOOLEAN;
    signal ap_reg_grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start : STD_LOGIC := '0';
    signal ap_sig_254 : BOOLEAN;
    signal wrk_src_mat_data_stream_0_V_full_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_0_V_write : STD_LOGIC;
    signal wrk_src_mat_data_stream_1_V_full_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_1_V_write : STD_LOGIC;
    signal wrk_src_mat_data_stream_2_V_full_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_2_V_write : STD_LOGIC;
    signal ap_reg_grp_filt_Split_240_320_4096_0_s_fu_141_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_276 : BOOLEAN;
    signal wrk_dst_mat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_0_V_empty_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_0_V_read : STD_LOGIC;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_287 : BOOLEAN;
    signal wrk_dst_mat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_1_V_empty_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_1_V_read : STD_LOGIC;
    signal wrk_dst_mat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_2_V_empty_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_2_V_read : STD_LOGIC;
    signal cond_i_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);

    component filt_CvtColor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_rows_V_read : IN STD_LOGIC_VECTOR (8 downto 0);
        p_src_cols_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_0_V_write : OUT STD_LOGIC;
        p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_1_V_write : OUT STD_LOGIC;
        p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component filt_AddS IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_read : IN STD_LOGIC_VECTOR (8 downto 0);
        src_cols_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_0_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_1_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_2_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component filt_Merge_240_320_0_4096_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src0_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src0_data_stream_V_empty_n : IN STD_LOGIC;
        src0_data_stream_V_read : OUT STD_LOGIC;
        src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src1_data_stream_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_read : OUT STD_LOGIC;
        src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src2_data_stream_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_0_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_1_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_2_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component filt_Split_240_320_4096_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst0_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst0_data_stream_V_full_n : IN STD_LOGIC;
        dst0_data_stream_V_write : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component FIFO_filt_Block_codeRepl6265_proc_wrk_src_mat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_Block_codeRepl6265_proc_wrk_src_mat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_Block_codeRepl6265_proc_wrk_src_mat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_Block_codeRepl6265_proc_wrk_dst_mat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_Block_codeRepl6265_proc_wrk_dst_mat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_Block_codeRepl6265_proc_wrk_dst_mat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    grp_filt_CvtColor_fu_104 : component filt_CvtColor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filt_CvtColor_fu_104_ap_start,
        ap_done => grp_filt_CvtColor_fu_104_ap_done,
        ap_idle => grp_filt_CvtColor_fu_104_ap_idle,
        ap_ready => grp_filt_CvtColor_fu_104_ap_ready,
        p_src_rows_V_read => wrk_src_mat_rows_V_read_reg_202,
        p_src_cols_V_read => wrk_src_mat_cols_V_read_reg_208,
        p_src_data_stream_0_V_dout => wrk_src_mat_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n => wrk_src_mat_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read => grp_filt_CvtColor_fu_104_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => wrk_src_mat_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n => wrk_src_mat_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read => grp_filt_CvtColor_fu_104_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => wrk_src_mat_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n => wrk_src_mat_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read => grp_filt_CvtColor_fu_104_p_src_data_stream_2_V_read,
        p_dst_data_stream_0_V_din => grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n => wrk_dst_mat_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write => grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din => grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n => wrk_dst_mat_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write => grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din => grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n => wrk_dst_mat_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write => grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_write);

    grp_filt_AddS_fu_116 : component filt_AddS
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filt_AddS_fu_116_ap_start,
        ap_done => grp_filt_AddS_fu_116_ap_done,
        ap_idle => grp_filt_AddS_fu_116_ap_idle,
        ap_ready => grp_filt_AddS_fu_116_ap_ready,
        src_rows_V_read => wrk_src_mat_rows_V_read_reg_202,
        src_cols_V_read => wrk_src_mat_cols_V_read_reg_208,
        src_data_stream_0_V_dout => wrk_src_mat_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n => wrk_src_mat_data_stream_0_V_empty_n,
        src_data_stream_0_V_read => grp_filt_AddS_fu_116_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => wrk_src_mat_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n => wrk_src_mat_data_stream_1_V_empty_n,
        src_data_stream_1_V_read => grp_filt_AddS_fu_116_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => wrk_src_mat_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n => wrk_src_mat_data_stream_2_V_empty_n,
        src_data_stream_2_V_read => grp_filt_AddS_fu_116_src_data_stream_2_V_read,
        dst_data_stream_0_V_din => grp_filt_AddS_fu_116_dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n => wrk_dst_mat_data_stream_0_V_full_n,
        dst_data_stream_0_V_write => grp_filt_AddS_fu_116_dst_data_stream_0_V_write,
        dst_data_stream_1_V_din => grp_filt_AddS_fu_116_dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n => wrk_dst_mat_data_stream_1_V_full_n,
        dst_data_stream_1_V_write => grp_filt_AddS_fu_116_dst_data_stream_1_V_write,
        dst_data_stream_2_V_din => grp_filt_AddS_fu_116_dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n => wrk_dst_mat_data_stream_2_V_full_n,
        dst_data_stream_2_V_write => grp_filt_AddS_fu_116_dst_data_stream_2_V_write);

    grp_filt_Merge_240_320_0_4096_s_fu_128 : component filt_Merge_240_320_0_4096_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start,
        ap_done => grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done,
        ap_idle => grp_filt_Merge_240_320_0_4096_s_fu_128_ap_idle,
        ap_ready => grp_filt_Merge_240_320_0_4096_s_fu_128_ap_ready,
        src0_data_stream_V_dout => src_chs_0_data_stream_0_V_dout,
        src0_data_stream_V_empty_n => src_chs_0_data_stream_0_V_empty_n,
        src0_data_stream_V_read => grp_filt_Merge_240_320_0_4096_s_fu_128_src0_data_stream_V_read,
        src1_data_stream_V_dout => src_chs_1_data_stream_0_V_dout,
        src1_data_stream_V_empty_n => src_chs_1_data_stream_0_V_empty_n,
        src1_data_stream_V_read => grp_filt_Merge_240_320_0_4096_s_fu_128_src1_data_stream_V_read,
        src2_data_stream_V_dout => src_chs_2_data_stream_0_V_dout,
        src2_data_stream_V_empty_n => src_chs_2_data_stream_0_V_empty_n,
        src2_data_stream_V_read => grp_filt_Merge_240_320_0_4096_s_fu_128_src2_data_stream_V_read,
        dst_data_stream_0_V_din => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n => wrk_src_mat_data_stream_0_V_full_n,
        dst_data_stream_0_V_write => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_0_V_write,
        dst_data_stream_1_V_din => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n => wrk_src_mat_data_stream_1_V_full_n,
        dst_data_stream_1_V_write => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_1_V_write,
        dst_data_stream_2_V_din => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n => wrk_src_mat_data_stream_2_V_full_n,
        dst_data_stream_2_V_write => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_2_V_write);

    grp_filt_Split_240_320_4096_0_s_fu_141 : component filt_Split_240_320_4096_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_filt_Split_240_320_4096_0_s_fu_141_ap_start,
        ap_done => grp_filt_Split_240_320_4096_0_s_fu_141_ap_done,
        ap_idle => grp_filt_Split_240_320_4096_0_s_fu_141_ap_idle,
        ap_ready => grp_filt_Split_240_320_4096_0_s_fu_141_ap_ready,
        src_data_stream_0_V_dout => wrk_dst_mat_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n => wrk_dst_mat_data_stream_0_V_empty_n,
        src_data_stream_0_V_read => grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => wrk_dst_mat_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n => wrk_dst_mat_data_stream_1_V_empty_n,
        src_data_stream_1_V_read => grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => wrk_dst_mat_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n => wrk_dst_mat_data_stream_2_V_empty_n,
        src_data_stream_2_V_read => grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_2_V_read,
        dst0_data_stream_V_din => grp_filt_Split_240_320_4096_0_s_fu_141_dst0_data_stream_V_din,
        dst0_data_stream_V_full_n => dst_chs_0_data_stream_0_V_full_n,
        dst0_data_stream_V_write => grp_filt_Split_240_320_4096_0_s_fu_141_dst0_data_stream_V_write,
        dst1_data_stream_V_din => grp_filt_Split_240_320_4096_0_s_fu_141_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => dst_chs_1_data_stream_0_V_full_n,
        dst1_data_stream_V_write => grp_filt_Split_240_320_4096_0_s_fu_141_dst1_data_stream_V_write,
        dst2_data_stream_V_din => grp_filt_Split_240_320_4096_0_s_fu_141_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => dst_chs_2_data_stream_0_V_full_n,
        dst2_data_stream_V_write => grp_filt_Split_240_320_4096_0_s_fu_141_dst2_data_stream_V_write);

    wrk_src_mat_data_stream_0_V_wrk_src_mat_data_stream_0_V_fifo_U : component FIFO_filt_Block_codeRepl6265_proc_wrk_src_mat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_0_V_din,
        if_full_n => wrk_src_mat_data_stream_0_V_full_n,
        if_write => wrk_src_mat_data_stream_0_V_write,
        if_dout => wrk_src_mat_data_stream_0_V_dout,
        if_empty_n => wrk_src_mat_data_stream_0_V_empty_n,
        if_read => wrk_src_mat_data_stream_0_V_read);

    wrk_src_mat_data_stream_1_V_wrk_src_mat_data_stream_1_V_fifo_U : component FIFO_filt_Block_codeRepl6265_proc_wrk_src_mat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_1_V_din,
        if_full_n => wrk_src_mat_data_stream_1_V_full_n,
        if_write => wrk_src_mat_data_stream_1_V_write,
        if_dout => wrk_src_mat_data_stream_1_V_dout,
        if_empty_n => wrk_src_mat_data_stream_1_V_empty_n,
        if_read => wrk_src_mat_data_stream_1_V_read);

    wrk_src_mat_data_stream_2_V_wrk_src_mat_data_stream_2_V_fifo_U : component FIFO_filt_Block_codeRepl6265_proc_wrk_src_mat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_2_V_din,
        if_full_n => wrk_src_mat_data_stream_2_V_full_n,
        if_write => wrk_src_mat_data_stream_2_V_write,
        if_dout => wrk_src_mat_data_stream_2_V_dout,
        if_empty_n => wrk_src_mat_data_stream_2_V_empty_n,
        if_read => wrk_src_mat_data_stream_2_V_read);

    wrk_dst_mat_data_stream_0_V_wrk_dst_mat_data_stream_0_V_fifo_U : component FIFO_filt_Block_codeRepl6265_proc_wrk_dst_mat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => wrk_dst_mat_data_stream_0_V_din,
        if_full_n => wrk_dst_mat_data_stream_0_V_full_n,
        if_write => wrk_dst_mat_data_stream_0_V_write,
        if_dout => wrk_dst_mat_data_stream_0_V_dout,
        if_empty_n => wrk_dst_mat_data_stream_0_V_empty_n,
        if_read => wrk_dst_mat_data_stream_0_V_read);

    wrk_dst_mat_data_stream_1_V_wrk_dst_mat_data_stream_1_V_fifo_U : component FIFO_filt_Block_codeRepl6265_proc_wrk_dst_mat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => wrk_dst_mat_data_stream_1_V_din,
        if_full_n => wrk_dst_mat_data_stream_1_V_full_n,
        if_write => wrk_dst_mat_data_stream_1_V_write,
        if_dout => wrk_dst_mat_data_stream_1_V_dout,
        if_empty_n => wrk_dst_mat_data_stream_1_V_empty_n,
        if_read => wrk_dst_mat_data_stream_1_V_read);

    wrk_dst_mat_data_stream_2_V_wrk_dst_mat_data_stream_2_V_fifo_U : component FIFO_filt_Block_codeRepl6265_proc_wrk_dst_mat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => wrk_dst_mat_data_stream_2_V_din,
        if_full_n => wrk_dst_mat_data_stream_2_V_full_n,
        if_write => wrk_dst_mat_data_stream_2_V_write,
        if_dout => wrk_dst_mat_data_stream_2_V_dout,
        if_empty_n => wrk_dst_mat_data_stream_2_V_empty_n,
        if_read => wrk_dst_mat_data_stream_2_V_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_filt_Split_240_320_4096_0_s_fu_141_ap_done)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filt_AddS_fu_116_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filt_AddS_fu_116_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                    ap_reg_grp_filt_AddS_fu_116_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filt_AddS_fu_116_ap_ready)) then 
                    ap_reg_grp_filt_AddS_fu_116_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filt_CvtColor_fu_104_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filt_CvtColor_fu_104_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_grp_filt_CvtColor_fu_104_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filt_CvtColor_fu_104_ap_ready)) then 
                    ap_reg_grp_filt_CvtColor_fu_104_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_254))) then 
                    ap_reg_grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filt_Merge_240_320_0_4096_s_fu_128_ap_ready)) then 
                    ap_reg_grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_filt_Split_240_320_4096_0_s_fu_141_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_filt_Split_240_320_4096_0_s_fu_141_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                    ap_reg_grp_filt_Split_240_320_4096_0_s_fu_141_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_filt_Split_240_320_4096_0_s_fu_141_ap_ready)) then 
                    ap_reg_grp_filt_Split_240_320_4096_0_s_fu_141_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_86 or (ap_const_logic_0 = grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done))))) then
                wrk_src_mat_cols_V_read_reg_208 <= wrk_src_mat_cols_V_dout;
                wrk_src_mat_rows_V_read_reg_202 <= wrk_src_mat_rows_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_86, grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done, grp_filt_CvtColor_fu_104_ap_done, grp_filt_AddS_fu_116_ap_done, grp_filt_Split_240_320_4096_0_s_fu_141_ap_done, ap_sig_254, cond_i_fu_154_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_254)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((ap_sig_86 or (ap_const_logic_0 = grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done))) and not((cond_i_fu_154_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                elsif ((not((ap_sig_86 or (ap_const_logic_0 = grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done))) and (cond_i_fu_154_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_logic_0 = grp_filt_AddS_fu_116_ap_done))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_logic_0 = grp_filt_CvtColor_fu_104_ap_done))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = grp_filt_Split_240_320_4096_0_s_fu_141_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, grp_filt_Split_240_320_4096_0_s_fu_141_ap_done, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_filt_Split_240_320_4096_0_s_fu_141_ap_done))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_filt_Split_240_320_4096_0_s_fu_141_ap_done, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_filt_Split_240_320_4096_0_s_fu_141_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_200_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_200 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_207_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_207 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_240_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_240 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_247_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_247 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_254_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_254 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_276_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_276 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_287_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_287 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_75_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_75 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_86_assign_proc : process(sel_empty_n, wrk_src_mat_rows_V_empty_n, wrk_src_mat_cols_V_empty_n)
    begin
                ap_sig_86 <= ((wrk_src_mat_rows_V_empty_n = ap_const_logic_0) or (wrk_src_mat_cols_V_empty_n = ap_const_logic_0) or (sel_empty_n = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_26)
    begin
        if (ap_sig_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_75)
    begin
        if (ap_sig_75) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_240)
    begin
        if (ap_sig_240) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_247)
    begin
        if (ap_sig_247) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_200)
    begin
        if (ap_sig_200) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_207)
    begin
        if (ap_sig_207) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_276)
    begin
        if (ap_sig_276) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_287)
    begin
        if (ap_sig_287) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;

    cond_i_fu_154_p2 <= "1" when (sel_dout = ap_const_lv32_1) else "0";
    dst_chs_0_data_stream_0_V_din <= grp_filt_Split_240_320_4096_0_s_fu_141_dst0_data_stream_V_din;

    dst_chs_0_data_stream_0_V_write_assign_proc : process(grp_filt_Split_240_320_4096_0_s_fu_141_dst0_data_stream_V_write, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            dst_chs_0_data_stream_0_V_write <= grp_filt_Split_240_320_4096_0_s_fu_141_dst0_data_stream_V_write;
        else 
            dst_chs_0_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    dst_chs_1_data_stream_0_V_din <= grp_filt_Split_240_320_4096_0_s_fu_141_dst1_data_stream_V_din;

    dst_chs_1_data_stream_0_V_write_assign_proc : process(grp_filt_Split_240_320_4096_0_s_fu_141_dst1_data_stream_V_write, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            dst_chs_1_data_stream_0_V_write <= grp_filt_Split_240_320_4096_0_s_fu_141_dst1_data_stream_V_write;
        else 
            dst_chs_1_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    dst_chs_2_data_stream_0_V_din <= grp_filt_Split_240_320_4096_0_s_fu_141_dst2_data_stream_V_din;

    dst_chs_2_data_stream_0_V_write_assign_proc : process(grp_filt_Split_240_320_4096_0_s_fu_141_dst2_data_stream_V_write, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            dst_chs_2_data_stream_0_V_write <= grp_filt_Split_240_320_4096_0_s_fu_141_dst2_data_stream_V_write;
        else 
            dst_chs_2_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_filt_AddS_fu_116_ap_start <= ap_reg_grp_filt_AddS_fu_116_ap_start;
    grp_filt_CvtColor_fu_104_ap_start <= ap_reg_grp_filt_CvtColor_fu_104_ap_start;
    grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start <= ap_reg_grp_filt_Merge_240_320_0_4096_s_fu_128_ap_start;
    grp_filt_Split_240_320_4096_0_s_fu_141_ap_start <= ap_reg_grp_filt_Split_240_320_4096_0_s_fu_141_ap_start;

    sel_blk_n_assign_proc : process(sel_empty_n, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            sel_blk_n <= sel_empty_n;
        else 
            sel_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sel_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_86, grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_86 or (ap_const_logic_0 = grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done))))) then 
            sel_read <= ap_const_logic_1;
        else 
            sel_read <= ap_const_logic_0;
        end if; 
    end process;


    src_chs_0_data_stream_0_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_filt_Merge_240_320_0_4096_s_fu_128_src0_data_stream_V_read)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            src_chs_0_data_stream_0_V_read <= grp_filt_Merge_240_320_0_4096_s_fu_128_src0_data_stream_V_read;
        else 
            src_chs_0_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src_chs_1_data_stream_0_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_filt_Merge_240_320_0_4096_s_fu_128_src1_data_stream_V_read)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            src_chs_1_data_stream_0_V_read <= grp_filt_Merge_240_320_0_4096_s_fu_128_src1_data_stream_V_read;
        else 
            src_chs_1_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    src_chs_2_data_stream_0_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_filt_Merge_240_320_0_4096_s_fu_128_src2_data_stream_V_read)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            src_chs_2_data_stream_0_V_read <= grp_filt_Merge_240_320_0_4096_s_fu_128_src2_data_stream_V_read;
        else 
            src_chs_2_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_dst_mat_data_stream_0_V_din_assign_proc : process(grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_din, grp_filt_AddS_fu_116_dst_data_stream_0_V_din, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_dst_mat_data_stream_0_V_din <= grp_filt_AddS_fu_116_dst_data_stream_0_V_din;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_dst_mat_data_stream_0_V_din <= grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_din;
        else 
            wrk_dst_mat_data_stream_0_V_din <= grp_filt_AddS_fu_116_dst_data_stream_0_V_din;
        end if; 
    end process;


    wrk_dst_mat_data_stream_0_V_read_assign_proc : process(grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_0_V_read, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            wrk_dst_mat_data_stream_0_V_read <= grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_0_V_read;
        else 
            wrk_dst_mat_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_dst_mat_data_stream_0_V_write_assign_proc : process(grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_write, grp_filt_AddS_fu_116_dst_data_stream_0_V_write, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_dst_mat_data_stream_0_V_write <= grp_filt_AddS_fu_116_dst_data_stream_0_V_write;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_dst_mat_data_stream_0_V_write <= grp_filt_CvtColor_fu_104_p_dst_data_stream_0_V_write;
        else 
            wrk_dst_mat_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    wrk_dst_mat_data_stream_1_V_din_assign_proc : process(grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_din, grp_filt_AddS_fu_116_dst_data_stream_1_V_din, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_dst_mat_data_stream_1_V_din <= grp_filt_AddS_fu_116_dst_data_stream_1_V_din;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_dst_mat_data_stream_1_V_din <= grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_din;
        else 
            wrk_dst_mat_data_stream_1_V_din <= grp_filt_AddS_fu_116_dst_data_stream_1_V_din;
        end if; 
    end process;


    wrk_dst_mat_data_stream_1_V_read_assign_proc : process(grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_1_V_read, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            wrk_dst_mat_data_stream_1_V_read <= grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_1_V_read;
        else 
            wrk_dst_mat_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_dst_mat_data_stream_1_V_write_assign_proc : process(grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_write, grp_filt_AddS_fu_116_dst_data_stream_1_V_write, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_dst_mat_data_stream_1_V_write <= grp_filt_AddS_fu_116_dst_data_stream_1_V_write;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_dst_mat_data_stream_1_V_write <= grp_filt_CvtColor_fu_104_p_dst_data_stream_1_V_write;
        else 
            wrk_dst_mat_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    wrk_dst_mat_data_stream_2_V_din_assign_proc : process(grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_din, grp_filt_AddS_fu_116_dst_data_stream_2_V_din, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_dst_mat_data_stream_2_V_din <= grp_filt_AddS_fu_116_dst_data_stream_2_V_din;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_dst_mat_data_stream_2_V_din <= grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_din;
        else 
            wrk_dst_mat_data_stream_2_V_din <= grp_filt_AddS_fu_116_dst_data_stream_2_V_din;
        end if; 
    end process;


    wrk_dst_mat_data_stream_2_V_read_assign_proc : process(grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_2_V_read, ap_sig_cseq_ST_st8_fsm_7)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            wrk_dst_mat_data_stream_2_V_read <= grp_filt_Split_240_320_4096_0_s_fu_141_src_data_stream_2_V_read;
        else 
            wrk_dst_mat_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_dst_mat_data_stream_2_V_write_assign_proc : process(grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_write, grp_filt_AddS_fu_116_dst_data_stream_2_V_write, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_dst_mat_data_stream_2_V_write <= grp_filt_AddS_fu_116_dst_data_stream_2_V_write;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_dst_mat_data_stream_2_V_write <= grp_filt_CvtColor_fu_104_p_dst_data_stream_2_V_write;
        else 
            wrk_dst_mat_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_cols_V_blk_n_assign_proc : process(wrk_src_mat_cols_V_empty_n, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            wrk_src_mat_cols_V_blk_n <= wrk_src_mat_cols_V_empty_n;
        else 
            wrk_src_mat_cols_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    wrk_src_mat_cols_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_86, grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_86 or (ap_const_logic_0 = grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done))))) then 
            wrk_src_mat_cols_V_read <= ap_const_logic_1;
        else 
            wrk_src_mat_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_data_stream_0_V_read_assign_proc : process(grp_filt_CvtColor_fu_104_p_src_data_stream_0_V_read, grp_filt_AddS_fu_116_src_data_stream_0_V_read, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_src_mat_data_stream_0_V_read <= grp_filt_AddS_fu_116_src_data_stream_0_V_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_src_mat_data_stream_0_V_read <= grp_filt_CvtColor_fu_104_p_src_data_stream_0_V_read;
        else 
            wrk_src_mat_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_data_stream_0_V_write_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_0_V_write)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            wrk_src_mat_data_stream_0_V_write <= grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_0_V_write;
        else 
            wrk_src_mat_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_data_stream_1_V_read_assign_proc : process(grp_filt_CvtColor_fu_104_p_src_data_stream_1_V_read, grp_filt_AddS_fu_116_src_data_stream_1_V_read, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_src_mat_data_stream_1_V_read <= grp_filt_AddS_fu_116_src_data_stream_1_V_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_src_mat_data_stream_1_V_read <= grp_filt_CvtColor_fu_104_p_src_data_stream_1_V_read;
        else 
            wrk_src_mat_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_data_stream_1_V_write_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_1_V_write)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            wrk_src_mat_data_stream_1_V_write <= grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_1_V_write;
        else 
            wrk_src_mat_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_data_stream_2_V_read_assign_proc : process(grp_filt_CvtColor_fu_104_p_src_data_stream_2_V_read, grp_filt_AddS_fu_116_src_data_stream_2_V_read, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            wrk_src_mat_data_stream_2_V_read <= grp_filt_AddS_fu_116_src_data_stream_2_V_read;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            wrk_src_mat_data_stream_2_V_read <= grp_filt_CvtColor_fu_104_p_src_data_stream_2_V_read;
        else 
            wrk_src_mat_data_stream_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_data_stream_2_V_write_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_2_V_write)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            wrk_src_mat_data_stream_2_V_write <= grp_filt_Merge_240_320_0_4096_s_fu_128_dst_data_stream_2_V_write;
        else 
            wrk_src_mat_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    wrk_src_mat_rows_V_blk_n_assign_proc : process(wrk_src_mat_rows_V_empty_n, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            wrk_src_mat_rows_V_blk_n <= wrk_src_mat_rows_V_empty_n;
        else 
            wrk_src_mat_rows_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    wrk_src_mat_rows_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_86, grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_sig_86 or (ap_const_logic_0 = grp_filt_Merge_240_320_0_4096_s_fu_128_ap_done))))) then 
            wrk_src_mat_rows_V_read <= ap_const_logic_1;
        else 
            wrk_src_mat_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
