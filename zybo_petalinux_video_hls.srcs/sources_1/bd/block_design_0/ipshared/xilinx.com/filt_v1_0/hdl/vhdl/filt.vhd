-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filt is
generic (
    C_S_AXI_CONTROL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    s_axi_CONTROL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CONTROL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CONTROL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CONTROL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CONTROL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CONTROL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CONTROL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    src_axi_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    src_axi_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    src_axi_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    src_axi_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axi_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axi_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    src_axi_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_axi_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_axi_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_axi_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_axi_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axi_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axi_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_axi_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    src_axi_TVALID : IN STD_LOGIC;
    src_axi_TREADY : OUT STD_LOGIC;
    dst_axi_TVALID : OUT STD_LOGIC;
    dst_axi_TREADY : IN STD_LOGIC );
end;


architecture behav of filt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "filt,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=16.961000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=8,HLS_SYN_DSP=52,HLS_SYN_FF=6600,HLS_SYN_LUT=7504}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_S_AXI_WSTRB_WIDTH : INTEGER range 63 downto 0 := 4;
    constant C_S_AXI_ADDR_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_ap_start : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_ap_done : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_ap_continue : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_ap_idle : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_ap_ready : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_src_mat_rows_V_out_din : STD_LOGIC_VECTOR (8 downto 0);
    signal filt_Block_codeRepl42_proc_U0_src_mat_rows_V_out_write : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_src_mat_cols_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal filt_Block_codeRepl42_proc_U0_src_mat_cols_V_out_write : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_dst_mat_rows_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal filt_Block_codeRepl42_proc_U0_dst_mat_rows_V_out_write : STD_LOGIC;
    signal filt_Block_codeRepl42_proc_U0_dst_mat_cols_V_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal filt_Block_codeRepl42_proc_U0_dst_mat_cols_V_out_write : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_src_axi_TREADY : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_AXIvideo2Mat_U0_img_data_stream_0_V_write : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_AXIvideo2Mat_U0_img_data_stream_1_V_write : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_AXIvideo2Mat_U0_img_data_stream_2_V_write : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_data_stream_3_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_AXIvideo2Mat_U0_img_data_stream_3_V_write : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (8 downto 0);
    signal filt_AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal filt_AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal filt_AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_ap_start : STD_LOGIC := '0';
    signal filt_Split_240_320_6144_0_U0_ap_done : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_ap_continue : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_ap_idle : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_ap_ready : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_src_rows_V_read : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_src_cols_V_read : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_src_data_stream_3_V_read : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_dst0_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Split_240_320_6144_0_U0_dst0_data_stream_V_write : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Split_240_320_6144_0_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Split_240_320_6144_0_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal filt_Split_240_320_6144_0_U0_dst3_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Split_240_320_6144_0_U0_dst3_data_stream_V_write : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_ap_start : STD_LOGIC := '0';
    signal filt_Merge_240_320_0_4096_U0_ap_done : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_ap_continue : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_ap_idle : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_ap_ready : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_src0_data_stream_V_read : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_src1_data_stream_V_read : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_src2_data_stream_V_read : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Merge_240_320_0_4096_U0_dst_data_stream_0_V_write : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Merge_240_320_0_4096_U0_dst_data_stream_1_V_write : STD_LOGIC;
    signal filt_Merge_240_320_0_4096_U0_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Merge_240_320_0_4096_U0_dst_data_stream_2_V_write : STD_LOGIC;
    signal filt_AddS_U0_ap_start : STD_LOGIC := '0';
    signal filt_AddS_U0_ap_done : STD_LOGIC;
    signal filt_AddS_U0_ap_continue : STD_LOGIC;
    signal filt_AddS_U0_ap_idle : STD_LOGIC;
    signal filt_AddS_U0_ap_ready : STD_LOGIC;
    signal filt_AddS_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal filt_AddS_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal filt_AddS_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal filt_AddS_U0_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_AddS_U0_dst_data_stream_0_V_write : STD_LOGIC;
    signal filt_AddS_U0_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_AddS_U0_dst_data_stream_1_V_write : STD_LOGIC;
    signal filt_AddS_U0_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_AddS_U0_dst_data_stream_2_V_write : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_ap_start : STD_LOGIC := '0';
    signal filt_Split_240_320_4096_0_U0_ap_done : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_ap_continue : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_ap_idle : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_ap_ready : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_src_data_stream_0_V_read : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_src_data_stream_1_V_read : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_src_data_stream_2_V_read : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_dst0_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Split_240_320_4096_0_U0_dst0_data_stream_V_write : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_dst1_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Split_240_320_4096_0_U0_dst1_data_stream_V_write : STD_LOGIC;
    signal filt_Split_240_320_4096_0_U0_dst2_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Split_240_320_4096_0_U0_dst2_data_stream_V_write : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_ap_start : STD_LOGIC := '0';
    signal filt_Merge_240_320_0_6144_U0_ap_done : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_ap_continue : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_ap_idle : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_ap_ready : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_src0_data_stream_V_read : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_src1_data_stream_V_read : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_src2_data_stream_V_read : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_src3_data_stream_V_read : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_0_V_write : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_1_V_write : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_2_V_write : STD_LOGIC;
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_3_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Merge_240_320_0_6144_U0_dst_data_stream_3_V_write : STD_LOGIC;
    signal filt_Resize_U0_ap_start : STD_LOGIC := '0';
    signal filt_Resize_U0_ap_done : STD_LOGIC;
    signal filt_Resize_U0_ap_continue : STD_LOGIC;
    signal filt_Resize_U0_ap_idle : STD_LOGIC;
    signal filt_Resize_U0_ap_ready : STD_LOGIC;
    signal filt_Resize_U0_p_src_data_stream_0_V_read : STD_LOGIC;
    signal filt_Resize_U0_p_src_data_stream_1_V_read : STD_LOGIC;
    signal filt_Resize_U0_p_src_data_stream_2_V_read : STD_LOGIC;
    signal filt_Resize_U0_p_src_data_stream_3_V_read : STD_LOGIC;
    signal filt_Resize_U0_p_dst_rows_V_read : STD_LOGIC;
    signal filt_Resize_U0_p_dst_cols_V_read : STD_LOGIC;
    signal filt_Resize_U0_p_dst_data_stream_0_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Resize_U0_p_dst_data_stream_0_V_write : STD_LOGIC;
    signal filt_Resize_U0_p_dst_data_stream_1_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Resize_U0_p_dst_data_stream_1_V_write : STD_LOGIC;
    signal filt_Resize_U0_p_dst_data_stream_2_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Resize_U0_p_dst_data_stream_2_V_write : STD_LOGIC;
    signal filt_Resize_U0_p_dst_data_stream_3_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_Resize_U0_p_dst_data_stream_3_V_write : STD_LOGIC;
    signal filt_Resize_U0_p_dst_rows_V_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal filt_Resize_U0_p_dst_rows_V_out_write : STD_LOGIC;
    signal filt_Resize_U0_p_dst_cols_V_out_din : STD_LOGIC_VECTOR (10 downto 0);
    signal filt_Resize_U0_p_dst_cols_V_out_write : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_ap_start : STD_LOGIC := '0';
    signal filt_Mat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_img_rows_V_read : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_img_cols_V_read : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_img_data_stream_0_V_read : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_img_data_stream_1_V_read : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_img_data_stream_2_V_read : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_img_data_stream_3_V_read : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_dst_axi_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal filt_Mat2AXIvideo_U0_dst_axi_TVALID : STD_LOGIC;
    signal filt_Mat2AXIvideo_U0_dst_axi_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal filt_Mat2AXIvideo_U0_dst_axi_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal filt_Mat2AXIvideo_U0_dst_axi_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal filt_Mat2AXIvideo_U0_dst_axi_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal filt_Mat2AXIvideo_U0_dst_axi_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal filt_Mat2AXIvideo_U0_dst_axi_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_hs_continue : STD_LOGIC;
    signal src_mat_rows_V_channel_full_n : STD_LOGIC;
    signal src_mat_rows_V_channel_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal src_mat_rows_V_channel_empty_n : STD_LOGIC;
    signal src_mat_cols_V_channel_full_n : STD_LOGIC;
    signal src_mat_cols_V_channel_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal src_mat_cols_V_channel_empty_n : STD_LOGIC;
    signal dst_mat_rows_V_channel_full_n : STD_LOGIC;
    signal dst_mat_rows_V_channel_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal dst_mat_rows_V_channel_empty_n : STD_LOGIC;
    signal dst_mat_cols_V_channel_full_n : STD_LOGIC;
    signal dst_mat_cols_V_channel_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal dst_mat_cols_V_channel_empty_n : STD_LOGIC;
    signal src_mat_data_stream_0_V_full_n : STD_LOGIC;
    signal src_mat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_mat_data_stream_0_V_empty_n : STD_LOGIC;
    signal src_mat_data_stream_1_V_full_n : STD_LOGIC;
    signal src_mat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_mat_data_stream_1_V_empty_n : STD_LOGIC;
    signal src_mat_data_stream_2_V_full_n : STD_LOGIC;
    signal src_mat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_mat_data_stream_2_V_empty_n : STD_LOGIC;
    signal src_mat_data_stream_3_V_full_n : STD_LOGIC;
    signal src_mat_data_stream_3_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_mat_data_stream_3_V_empty_n : STD_LOGIC;
    signal src_mat_rows_V_channel61_full_n : STD_LOGIC;
    signal src_mat_rows_V_channel61_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal src_mat_rows_V_channel61_empty_n : STD_LOGIC;
    signal src_mat_cols_V_channel62_full_n : STD_LOGIC;
    signal src_mat_cols_V_channel62_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal src_mat_cols_V_channel62_empty_n : STD_LOGIC;
    signal src_chs_0_data_stream_0_V_full_n : STD_LOGIC;
    signal src_chs_0_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_chs_0_data_stream_0_V_empty_n : STD_LOGIC;
    signal src_chs_1_data_stream_0_V_full_n : STD_LOGIC;
    signal src_chs_1_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_chs_1_data_stream_0_V_empty_n : STD_LOGIC;
    signal src_chs_2_data_stream_0_V_full_n : STD_LOGIC;
    signal src_chs_2_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_chs_2_data_stream_0_V_empty_n : STD_LOGIC;
    signal src_chs_3_data_stream_0_V_full_n : STD_LOGIC;
    signal src_chs_3_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_chs_3_data_stream_0_V_empty_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_0_V_full_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_src_mat_data_stream_0_V_empty_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_1_V_full_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_src_mat_data_stream_1_V_empty_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_2_V_full_n : STD_LOGIC;
    signal wrk_src_mat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_src_mat_data_stream_2_V_empty_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_0_V_full_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_0_V_empty_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_1_V_full_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_1_V_empty_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_2_V_full_n : STD_LOGIC;
    signal wrk_dst_mat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal wrk_dst_mat_data_stream_2_V_empty_n : STD_LOGIC;
    signal dst_chs_0_data_stream_0_V_full_n : STD_LOGIC;
    signal dst_chs_0_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_chs_0_data_stream_0_V_empty_n : STD_LOGIC;
    signal dst_chs_1_data_stream_0_V_full_n : STD_LOGIC;
    signal dst_chs_1_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_chs_1_data_stream_0_V_empty_n : STD_LOGIC;
    signal dst_chs_2_data_stream_0_V_full_n : STD_LOGIC;
    signal dst_chs_2_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_chs_2_data_stream_0_V_empty_n : STD_LOGIC;
    signal fin_mat_data_stream_0_V_full_n : STD_LOGIC;
    signal fin_mat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_mat_data_stream_0_V_empty_n : STD_LOGIC;
    signal fin_mat_data_stream_1_V_full_n : STD_LOGIC;
    signal fin_mat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_mat_data_stream_1_V_empty_n : STD_LOGIC;
    signal fin_mat_data_stream_2_V_full_n : STD_LOGIC;
    signal fin_mat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_mat_data_stream_2_V_empty_n : STD_LOGIC;
    signal fin_mat_data_stream_3_V_full_n : STD_LOGIC;
    signal fin_mat_data_stream_3_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_mat_data_stream_3_V_empty_n : STD_LOGIC;
    signal dst_mat_data_stream_0_V_full_n : STD_LOGIC;
    signal dst_mat_data_stream_0_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_mat_data_stream_0_V_empty_n : STD_LOGIC;
    signal dst_mat_data_stream_1_V_full_n : STD_LOGIC;
    signal dst_mat_data_stream_1_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_mat_data_stream_1_V_empty_n : STD_LOGIC;
    signal dst_mat_data_stream_2_V_full_n : STD_LOGIC;
    signal dst_mat_data_stream_2_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_mat_data_stream_2_V_empty_n : STD_LOGIC;
    signal dst_mat_data_stream_3_V_full_n : STD_LOGIC;
    signal dst_mat_data_stream_3_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_mat_data_stream_3_V_empty_n : STD_LOGIC;
    signal dst_mat_rows_V_channel63_full_n : STD_LOGIC;
    signal dst_mat_rows_V_channel63_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal dst_mat_rows_V_channel63_empty_n : STD_LOGIC;
    signal dst_mat_cols_V_channel64_full_n : STD_LOGIC;
    signal dst_mat_cols_V_channel64_dout : STD_LOGIC_VECTOR (10 downto 0);
    signal dst_mat_cols_V_channel64_empty_n : STD_LOGIC;
    signal ap_sig_hs_done : STD_LOGIC;
    signal ap_sig_hs_ready : STD_LOGIC;

    component filt_Block_codeRepl42_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_mat_rows_V_out_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        src_mat_rows_V_out_full_n : IN STD_LOGIC;
        src_mat_rows_V_out_write : OUT STD_LOGIC;
        src_mat_cols_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        src_mat_cols_V_out_full_n : IN STD_LOGIC;
        src_mat_cols_V_out_write : OUT STD_LOGIC;
        dst_mat_rows_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        dst_mat_rows_V_out_full_n : IN STD_LOGIC;
        dst_mat_rows_V_out_write : OUT STD_LOGIC;
        dst_mat_cols_V_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        dst_mat_cols_V_out_full_n : IN STD_LOGIC;
        dst_mat_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component filt_AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_axi_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        src_axi_TVALID : IN STD_LOGIC;
        src_axi_TREADY : OUT STD_LOGIC;
        src_axi_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
        src_axi_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        src_axi_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axi_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axi_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        src_axi_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_full_n : IN STD_LOGIC;
        img_data_stream_0_V_write : OUT STD_LOGIC;
        img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_full_n : IN STD_LOGIC;
        img_data_stream_1_V_write : OUT STD_LOGIC;
        img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_full_n : IN STD_LOGIC;
        img_data_stream_2_V_write : OUT STD_LOGIC;
        img_data_stream_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_3_V_full_n : IN STD_LOGIC;
        img_data_stream_3_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component filt_Split_240_320_6144_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_rows_V_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        src_rows_V_empty_n : IN STD_LOGIC;
        src_rows_V_read : OUT STD_LOGIC;
        src_cols_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        src_cols_V_empty_n : IN STD_LOGIC;
        src_cols_V_read : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        src_data_stream_3_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_3_V_empty_n : IN STD_LOGIC;
        src_data_stream_3_V_read : OUT STD_LOGIC;
        dst0_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst0_data_stream_V_full_n : IN STD_LOGIC;
        dst0_data_stream_V_write : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC;
        dst3_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst3_data_stream_V_full_n : IN STD_LOGIC;
        dst3_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component filt_Merge_240_320_0_4096_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src0_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src0_data_stream_V_empty_n : IN STD_LOGIC;
        src0_data_stream_V_read : OUT STD_LOGIC;
        src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src1_data_stream_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_read : OUT STD_LOGIC;
        src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src2_data_stream_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_0_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_1_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_2_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component filt_AddS IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_0_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_1_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_2_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_write : OUT STD_LOGIC );
    end component;


    component filt_Split_240_320_4096_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_0_V_empty_n : IN STD_LOGIC;
        src_data_stream_0_V_read : OUT STD_LOGIC;
        src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_1_V_empty_n : IN STD_LOGIC;
        src_data_stream_1_V_read : OUT STD_LOGIC;
        src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_data_stream_2_V_empty_n : IN STD_LOGIC;
        src_data_stream_2_V_read : OUT STD_LOGIC;
        dst0_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst0_data_stream_V_full_n : IN STD_LOGIC;
        dst0_data_stream_V_write : OUT STD_LOGIC;
        dst1_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_data_stream_V_full_n : IN STD_LOGIC;
        dst1_data_stream_V_write : OUT STD_LOGIC;
        dst2_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst2_data_stream_V_full_n : IN STD_LOGIC;
        dst2_data_stream_V_write : OUT STD_LOGIC );
    end component;


    component filt_Merge_240_320_0_6144_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src0_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src0_data_stream_V_empty_n : IN STD_LOGIC;
        src0_data_stream_V_read : OUT STD_LOGIC;
        src1_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src1_data_stream_V_empty_n : IN STD_LOGIC;
        src1_data_stream_V_read : OUT STD_LOGIC;
        src2_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src2_data_stream_V_empty_n : IN STD_LOGIC;
        src2_data_stream_V_read : OUT STD_LOGIC;
        src3_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src3_data_stream_V_empty_n : IN STD_LOGIC;
        src3_data_stream_V_read : OUT STD_LOGIC;
        dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_0_V_full_n : IN STD_LOGIC;
        dst_data_stream_0_V_write : OUT STD_LOGIC;
        dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_1_V_full_n : IN STD_LOGIC;
        dst_data_stream_1_V_write : OUT STD_LOGIC;
        dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_2_V_full_n : IN STD_LOGIC;
        dst_data_stream_2_V_write : OUT STD_LOGIC;
        dst_data_stream_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_data_stream_3_V_full_n : IN STD_LOGIC;
        dst_data_stream_3_V_write : OUT STD_LOGIC );
    end component;


    component filt_Resize IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_0_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_0_V_read : OUT STD_LOGIC;
        p_src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_1_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_1_V_read : OUT STD_LOGIC;
        p_src_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_2_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_2_V_read : OUT STD_LOGIC;
        p_src_data_stream_3_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_stream_3_V_empty_n : IN STD_LOGIC;
        p_src_data_stream_3_V_read : OUT STD_LOGIC;
        p_dst_rows_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        p_dst_rows_V_empty_n : IN STD_LOGIC;
        p_dst_rows_V_read : OUT STD_LOGIC;
        p_dst_cols_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        p_dst_cols_V_empty_n : IN STD_LOGIC;
        p_dst_cols_V_read : OUT STD_LOGIC;
        p_dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_0_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_0_V_write : OUT STD_LOGIC;
        p_dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_1_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_1_V_write : OUT STD_LOGIC;
        p_dst_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_2_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_2_V_write : OUT STD_LOGIC;
        p_dst_data_stream_3_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst_data_stream_3_V_full_n : IN STD_LOGIC;
        p_dst_data_stream_3_V_write : OUT STD_LOGIC;
        p_dst_rows_V_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_dst_rows_V_out_full_n : IN STD_LOGIC;
        p_dst_rows_V_out_write : OUT STD_LOGIC;
        p_dst_cols_V_out_din : OUT STD_LOGIC_VECTOR (10 downto 0);
        p_dst_cols_V_out_full_n : IN STD_LOGIC;
        p_dst_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component filt_Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_0_V_empty_n : IN STD_LOGIC;
        img_data_stream_0_V_read : OUT STD_LOGIC;
        img_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_1_V_empty_n : IN STD_LOGIC;
        img_data_stream_1_V_read : OUT STD_LOGIC;
        img_data_stream_2_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_2_V_empty_n : IN STD_LOGIC;
        img_data_stream_2_V_read : OUT STD_LOGIC;
        img_data_stream_3_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_3_V_empty_n : IN STD_LOGIC;
        img_data_stream_3_V_read : OUT STD_LOGIC;
        dst_axi_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_axi_TVALID : OUT STD_LOGIC;
        dst_axi_TREADY : IN STD_LOGIC;
        dst_axi_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        dst_axi_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        dst_axi_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axi_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axi_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_axi_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FIFO_filt_src_mat_rows_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_mat_cols_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_rows_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_cols_V_channel IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_mat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_mat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_mat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_mat_data_stream_3_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_mat_rows_V_channel61 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_mat_cols_V_channel62 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_chs_0_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_chs_1_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_chs_2_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_src_chs_3_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_wrk_src_mat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_wrk_src_mat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_wrk_src_mat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_wrk_dst_mat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_wrk_dst_mat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_wrk_dst_mat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_chs_0_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_chs_1_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_chs_2_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_fin_mat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_fin_mat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_fin_mat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_fin_mat_data_stream_3_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_data_stream_0_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_data_stream_1_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_data_stream_2_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_data_stream_3_V IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_rows_V_channel63 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component FIFO_filt_dst_mat_cols_V_channel64 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (10 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (10 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component filt_CONTROL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    filt_CONTROL_BUS_s_axi_U : component filt_CONTROL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CONTROL_BUS_AWVALID,
        AWREADY => s_axi_CONTROL_BUS_AWREADY,
        AWADDR => s_axi_CONTROL_BUS_AWADDR,
        WVALID => s_axi_CONTROL_BUS_WVALID,
        WREADY => s_axi_CONTROL_BUS_WREADY,
        WDATA => s_axi_CONTROL_BUS_WDATA,
        WSTRB => s_axi_CONTROL_BUS_WSTRB,
        ARVALID => s_axi_CONTROL_BUS_ARVALID,
        ARREADY => s_axi_CONTROL_BUS_ARREADY,
        ARADDR => s_axi_CONTROL_BUS_ARADDR,
        RVALID => s_axi_CONTROL_BUS_RVALID,
        RREADY => s_axi_CONTROL_BUS_RREADY,
        RDATA => s_axi_CONTROL_BUS_RDATA,
        RRESP => s_axi_CONTROL_BUS_RRESP,
        BVALID => s_axi_CONTROL_BUS_BVALID,
        BREADY => s_axi_CONTROL_BUS_BREADY,
        BRESP => s_axi_CONTROL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    filt_Block_codeRepl42_proc_U0 : component filt_Block_codeRepl42_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_Block_codeRepl42_proc_U0_ap_start,
        ap_done => filt_Block_codeRepl42_proc_U0_ap_done,
        ap_continue => filt_Block_codeRepl42_proc_U0_ap_continue,
        ap_idle => filt_Block_codeRepl42_proc_U0_ap_idle,
        ap_ready => filt_Block_codeRepl42_proc_U0_ap_ready,
        src_mat_rows_V_out_din => filt_Block_codeRepl42_proc_U0_src_mat_rows_V_out_din,
        src_mat_rows_V_out_full_n => src_mat_rows_V_channel_full_n,
        src_mat_rows_V_out_write => filt_Block_codeRepl42_proc_U0_src_mat_rows_V_out_write,
        src_mat_cols_V_out_din => filt_Block_codeRepl42_proc_U0_src_mat_cols_V_out_din,
        src_mat_cols_V_out_full_n => src_mat_cols_V_channel_full_n,
        src_mat_cols_V_out_write => filt_Block_codeRepl42_proc_U0_src_mat_cols_V_out_write,
        dst_mat_rows_V_out_din => filt_Block_codeRepl42_proc_U0_dst_mat_rows_V_out_din,
        dst_mat_rows_V_out_full_n => dst_mat_rows_V_channel_full_n,
        dst_mat_rows_V_out_write => filt_Block_codeRepl42_proc_U0_dst_mat_rows_V_out_write,
        dst_mat_cols_V_out_din => filt_Block_codeRepl42_proc_U0_dst_mat_cols_V_out_din,
        dst_mat_cols_V_out_full_n => dst_mat_cols_V_channel_full_n,
        dst_mat_cols_V_out_write => filt_Block_codeRepl42_proc_U0_dst_mat_cols_V_out_write);

    filt_AXIvideo2Mat_U0 : component filt_AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_AXIvideo2Mat_U0_ap_start,
        ap_done => filt_AXIvideo2Mat_U0_ap_done,
        ap_continue => filt_AXIvideo2Mat_U0_ap_continue,
        ap_idle => filt_AXIvideo2Mat_U0_ap_idle,
        ap_ready => filt_AXIvideo2Mat_U0_ap_ready,
        src_axi_TDATA => src_axi_TDATA,
        src_axi_TVALID => src_axi_TVALID,
        src_axi_TREADY => filt_AXIvideo2Mat_U0_src_axi_TREADY,
        src_axi_TKEEP => src_axi_TKEEP,
        src_axi_TSTRB => src_axi_TSTRB,
        src_axi_TUSER => src_axi_TUSER,
        src_axi_TLAST => src_axi_TLAST,
        src_axi_TID => src_axi_TID,
        src_axi_TDEST => src_axi_TDEST,
        img_rows_V_dout => src_mat_rows_V_channel_dout,
        img_rows_V_empty_n => src_mat_rows_V_channel_empty_n,
        img_rows_V_read => filt_AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => src_mat_cols_V_channel_dout,
        img_cols_V_empty_n => src_mat_cols_V_channel_empty_n,
        img_cols_V_read => filt_AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_0_V_din => filt_AXIvideo2Mat_U0_img_data_stream_0_V_din,
        img_data_stream_0_V_full_n => src_mat_data_stream_0_V_full_n,
        img_data_stream_0_V_write => filt_AXIvideo2Mat_U0_img_data_stream_0_V_write,
        img_data_stream_1_V_din => filt_AXIvideo2Mat_U0_img_data_stream_1_V_din,
        img_data_stream_1_V_full_n => src_mat_data_stream_1_V_full_n,
        img_data_stream_1_V_write => filt_AXIvideo2Mat_U0_img_data_stream_1_V_write,
        img_data_stream_2_V_din => filt_AXIvideo2Mat_U0_img_data_stream_2_V_din,
        img_data_stream_2_V_full_n => src_mat_data_stream_2_V_full_n,
        img_data_stream_2_V_write => filt_AXIvideo2Mat_U0_img_data_stream_2_V_write,
        img_data_stream_3_V_din => filt_AXIvideo2Mat_U0_img_data_stream_3_V_din,
        img_data_stream_3_V_full_n => src_mat_data_stream_3_V_full_n,
        img_data_stream_3_V_write => filt_AXIvideo2Mat_U0_img_data_stream_3_V_write,
        img_rows_V_out_din => filt_AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => src_mat_rows_V_channel61_full_n,
        img_rows_V_out_write => filt_AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => filt_AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => src_mat_cols_V_channel62_full_n,
        img_cols_V_out_write => filt_AXIvideo2Mat_U0_img_cols_V_out_write);

    filt_Split_240_320_6144_0_U0 : component filt_Split_240_320_6144_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_Split_240_320_6144_0_U0_ap_start,
        ap_done => filt_Split_240_320_6144_0_U0_ap_done,
        ap_continue => filt_Split_240_320_6144_0_U0_ap_continue,
        ap_idle => filt_Split_240_320_6144_0_U0_ap_idle,
        ap_ready => filt_Split_240_320_6144_0_U0_ap_ready,
        src_rows_V_dout => src_mat_rows_V_channel61_dout,
        src_rows_V_empty_n => src_mat_rows_V_channel61_empty_n,
        src_rows_V_read => filt_Split_240_320_6144_0_U0_src_rows_V_read,
        src_cols_V_dout => src_mat_cols_V_channel62_dout,
        src_cols_V_empty_n => src_mat_cols_V_channel62_empty_n,
        src_cols_V_read => filt_Split_240_320_6144_0_U0_src_cols_V_read,
        src_data_stream_0_V_dout => src_mat_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n => src_mat_data_stream_0_V_empty_n,
        src_data_stream_0_V_read => filt_Split_240_320_6144_0_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => src_mat_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n => src_mat_data_stream_1_V_empty_n,
        src_data_stream_1_V_read => filt_Split_240_320_6144_0_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => src_mat_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n => src_mat_data_stream_2_V_empty_n,
        src_data_stream_2_V_read => filt_Split_240_320_6144_0_U0_src_data_stream_2_V_read,
        src_data_stream_3_V_dout => src_mat_data_stream_3_V_dout,
        src_data_stream_3_V_empty_n => src_mat_data_stream_3_V_empty_n,
        src_data_stream_3_V_read => filt_Split_240_320_6144_0_U0_src_data_stream_3_V_read,
        dst0_data_stream_V_din => filt_Split_240_320_6144_0_U0_dst0_data_stream_V_din,
        dst0_data_stream_V_full_n => src_chs_0_data_stream_0_V_full_n,
        dst0_data_stream_V_write => filt_Split_240_320_6144_0_U0_dst0_data_stream_V_write,
        dst1_data_stream_V_din => filt_Split_240_320_6144_0_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => src_chs_1_data_stream_0_V_full_n,
        dst1_data_stream_V_write => filt_Split_240_320_6144_0_U0_dst1_data_stream_V_write,
        dst2_data_stream_V_din => filt_Split_240_320_6144_0_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => src_chs_2_data_stream_0_V_full_n,
        dst2_data_stream_V_write => filt_Split_240_320_6144_0_U0_dst2_data_stream_V_write,
        dst3_data_stream_V_din => filt_Split_240_320_6144_0_U0_dst3_data_stream_V_din,
        dst3_data_stream_V_full_n => src_chs_3_data_stream_0_V_full_n,
        dst3_data_stream_V_write => filt_Split_240_320_6144_0_U0_dst3_data_stream_V_write);

    filt_Merge_240_320_0_4096_U0 : component filt_Merge_240_320_0_4096_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_Merge_240_320_0_4096_U0_ap_start,
        ap_done => filt_Merge_240_320_0_4096_U0_ap_done,
        ap_continue => filt_Merge_240_320_0_4096_U0_ap_continue,
        ap_idle => filt_Merge_240_320_0_4096_U0_ap_idle,
        ap_ready => filt_Merge_240_320_0_4096_U0_ap_ready,
        src0_data_stream_V_dout => src_chs_0_data_stream_0_V_dout,
        src0_data_stream_V_empty_n => src_chs_0_data_stream_0_V_empty_n,
        src0_data_stream_V_read => filt_Merge_240_320_0_4096_U0_src0_data_stream_V_read,
        src1_data_stream_V_dout => src_chs_1_data_stream_0_V_dout,
        src1_data_stream_V_empty_n => src_chs_1_data_stream_0_V_empty_n,
        src1_data_stream_V_read => filt_Merge_240_320_0_4096_U0_src1_data_stream_V_read,
        src2_data_stream_V_dout => src_chs_2_data_stream_0_V_dout,
        src2_data_stream_V_empty_n => src_chs_2_data_stream_0_V_empty_n,
        src2_data_stream_V_read => filt_Merge_240_320_0_4096_U0_src2_data_stream_V_read,
        dst_data_stream_0_V_din => filt_Merge_240_320_0_4096_U0_dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n => wrk_src_mat_data_stream_0_V_full_n,
        dst_data_stream_0_V_write => filt_Merge_240_320_0_4096_U0_dst_data_stream_0_V_write,
        dst_data_stream_1_V_din => filt_Merge_240_320_0_4096_U0_dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n => wrk_src_mat_data_stream_1_V_full_n,
        dst_data_stream_1_V_write => filt_Merge_240_320_0_4096_U0_dst_data_stream_1_V_write,
        dst_data_stream_2_V_din => filt_Merge_240_320_0_4096_U0_dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n => wrk_src_mat_data_stream_2_V_full_n,
        dst_data_stream_2_V_write => filt_Merge_240_320_0_4096_U0_dst_data_stream_2_V_write);

    filt_AddS_U0 : component filt_AddS
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_AddS_U0_ap_start,
        ap_done => filt_AddS_U0_ap_done,
        ap_continue => filt_AddS_U0_ap_continue,
        ap_idle => filt_AddS_U0_ap_idle,
        ap_ready => filt_AddS_U0_ap_ready,
        src_data_stream_0_V_dout => wrk_src_mat_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n => wrk_src_mat_data_stream_0_V_empty_n,
        src_data_stream_0_V_read => filt_AddS_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => wrk_src_mat_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n => wrk_src_mat_data_stream_1_V_empty_n,
        src_data_stream_1_V_read => filt_AddS_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => wrk_src_mat_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n => wrk_src_mat_data_stream_2_V_empty_n,
        src_data_stream_2_V_read => filt_AddS_U0_src_data_stream_2_V_read,
        dst_data_stream_0_V_din => filt_AddS_U0_dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n => wrk_dst_mat_data_stream_0_V_full_n,
        dst_data_stream_0_V_write => filt_AddS_U0_dst_data_stream_0_V_write,
        dst_data_stream_1_V_din => filt_AddS_U0_dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n => wrk_dst_mat_data_stream_1_V_full_n,
        dst_data_stream_1_V_write => filt_AddS_U0_dst_data_stream_1_V_write,
        dst_data_stream_2_V_din => filt_AddS_U0_dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n => wrk_dst_mat_data_stream_2_V_full_n,
        dst_data_stream_2_V_write => filt_AddS_U0_dst_data_stream_2_V_write);

    filt_Split_240_320_4096_0_U0 : component filt_Split_240_320_4096_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_Split_240_320_4096_0_U0_ap_start,
        ap_done => filt_Split_240_320_4096_0_U0_ap_done,
        ap_continue => filt_Split_240_320_4096_0_U0_ap_continue,
        ap_idle => filt_Split_240_320_4096_0_U0_ap_idle,
        ap_ready => filt_Split_240_320_4096_0_U0_ap_ready,
        src_data_stream_0_V_dout => wrk_dst_mat_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n => wrk_dst_mat_data_stream_0_V_empty_n,
        src_data_stream_0_V_read => filt_Split_240_320_4096_0_U0_src_data_stream_0_V_read,
        src_data_stream_1_V_dout => wrk_dst_mat_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n => wrk_dst_mat_data_stream_1_V_empty_n,
        src_data_stream_1_V_read => filt_Split_240_320_4096_0_U0_src_data_stream_1_V_read,
        src_data_stream_2_V_dout => wrk_dst_mat_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n => wrk_dst_mat_data_stream_2_V_empty_n,
        src_data_stream_2_V_read => filt_Split_240_320_4096_0_U0_src_data_stream_2_V_read,
        dst0_data_stream_V_din => filt_Split_240_320_4096_0_U0_dst0_data_stream_V_din,
        dst0_data_stream_V_full_n => dst_chs_0_data_stream_0_V_full_n,
        dst0_data_stream_V_write => filt_Split_240_320_4096_0_U0_dst0_data_stream_V_write,
        dst1_data_stream_V_din => filt_Split_240_320_4096_0_U0_dst1_data_stream_V_din,
        dst1_data_stream_V_full_n => dst_chs_1_data_stream_0_V_full_n,
        dst1_data_stream_V_write => filt_Split_240_320_4096_0_U0_dst1_data_stream_V_write,
        dst2_data_stream_V_din => filt_Split_240_320_4096_0_U0_dst2_data_stream_V_din,
        dst2_data_stream_V_full_n => dst_chs_2_data_stream_0_V_full_n,
        dst2_data_stream_V_write => filt_Split_240_320_4096_0_U0_dst2_data_stream_V_write);

    filt_Merge_240_320_0_6144_U0 : component filt_Merge_240_320_0_6144_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_Merge_240_320_0_6144_U0_ap_start,
        ap_done => filt_Merge_240_320_0_6144_U0_ap_done,
        ap_continue => filt_Merge_240_320_0_6144_U0_ap_continue,
        ap_idle => filt_Merge_240_320_0_6144_U0_ap_idle,
        ap_ready => filt_Merge_240_320_0_6144_U0_ap_ready,
        src0_data_stream_V_dout => dst_chs_0_data_stream_0_V_dout,
        src0_data_stream_V_empty_n => dst_chs_0_data_stream_0_V_empty_n,
        src0_data_stream_V_read => filt_Merge_240_320_0_6144_U0_src0_data_stream_V_read,
        src1_data_stream_V_dout => dst_chs_1_data_stream_0_V_dout,
        src1_data_stream_V_empty_n => dst_chs_1_data_stream_0_V_empty_n,
        src1_data_stream_V_read => filt_Merge_240_320_0_6144_U0_src1_data_stream_V_read,
        src2_data_stream_V_dout => dst_chs_2_data_stream_0_V_dout,
        src2_data_stream_V_empty_n => dst_chs_2_data_stream_0_V_empty_n,
        src2_data_stream_V_read => filt_Merge_240_320_0_6144_U0_src2_data_stream_V_read,
        src3_data_stream_V_dout => src_chs_3_data_stream_0_V_dout,
        src3_data_stream_V_empty_n => src_chs_3_data_stream_0_V_empty_n,
        src3_data_stream_V_read => filt_Merge_240_320_0_6144_U0_src3_data_stream_V_read,
        dst_data_stream_0_V_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_0_V_din,
        dst_data_stream_0_V_full_n => fin_mat_data_stream_0_V_full_n,
        dst_data_stream_0_V_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_0_V_write,
        dst_data_stream_1_V_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_1_V_din,
        dst_data_stream_1_V_full_n => fin_mat_data_stream_1_V_full_n,
        dst_data_stream_1_V_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_1_V_write,
        dst_data_stream_2_V_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_2_V_din,
        dst_data_stream_2_V_full_n => fin_mat_data_stream_2_V_full_n,
        dst_data_stream_2_V_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_2_V_write,
        dst_data_stream_3_V_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_3_V_din,
        dst_data_stream_3_V_full_n => fin_mat_data_stream_3_V_full_n,
        dst_data_stream_3_V_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_3_V_write);

    filt_Resize_U0 : component filt_Resize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_Resize_U0_ap_start,
        ap_done => filt_Resize_U0_ap_done,
        ap_continue => filt_Resize_U0_ap_continue,
        ap_idle => filt_Resize_U0_ap_idle,
        ap_ready => filt_Resize_U0_ap_ready,
        p_src_data_stream_0_V_dout => fin_mat_data_stream_0_V_dout,
        p_src_data_stream_0_V_empty_n => fin_mat_data_stream_0_V_empty_n,
        p_src_data_stream_0_V_read => filt_Resize_U0_p_src_data_stream_0_V_read,
        p_src_data_stream_1_V_dout => fin_mat_data_stream_1_V_dout,
        p_src_data_stream_1_V_empty_n => fin_mat_data_stream_1_V_empty_n,
        p_src_data_stream_1_V_read => filt_Resize_U0_p_src_data_stream_1_V_read,
        p_src_data_stream_2_V_dout => fin_mat_data_stream_2_V_dout,
        p_src_data_stream_2_V_empty_n => fin_mat_data_stream_2_V_empty_n,
        p_src_data_stream_2_V_read => filt_Resize_U0_p_src_data_stream_2_V_read,
        p_src_data_stream_3_V_dout => fin_mat_data_stream_3_V_dout,
        p_src_data_stream_3_V_empty_n => fin_mat_data_stream_3_V_empty_n,
        p_src_data_stream_3_V_read => filt_Resize_U0_p_src_data_stream_3_V_read,
        p_dst_rows_V_dout => dst_mat_rows_V_channel_dout,
        p_dst_rows_V_empty_n => dst_mat_rows_V_channel_empty_n,
        p_dst_rows_V_read => filt_Resize_U0_p_dst_rows_V_read,
        p_dst_cols_V_dout => dst_mat_cols_V_channel_dout,
        p_dst_cols_V_empty_n => dst_mat_cols_V_channel_empty_n,
        p_dst_cols_V_read => filt_Resize_U0_p_dst_cols_V_read,
        p_dst_data_stream_0_V_din => filt_Resize_U0_p_dst_data_stream_0_V_din,
        p_dst_data_stream_0_V_full_n => dst_mat_data_stream_0_V_full_n,
        p_dst_data_stream_0_V_write => filt_Resize_U0_p_dst_data_stream_0_V_write,
        p_dst_data_stream_1_V_din => filt_Resize_U0_p_dst_data_stream_1_V_din,
        p_dst_data_stream_1_V_full_n => dst_mat_data_stream_1_V_full_n,
        p_dst_data_stream_1_V_write => filt_Resize_U0_p_dst_data_stream_1_V_write,
        p_dst_data_stream_2_V_din => filt_Resize_U0_p_dst_data_stream_2_V_din,
        p_dst_data_stream_2_V_full_n => dst_mat_data_stream_2_V_full_n,
        p_dst_data_stream_2_V_write => filt_Resize_U0_p_dst_data_stream_2_V_write,
        p_dst_data_stream_3_V_din => filt_Resize_U0_p_dst_data_stream_3_V_din,
        p_dst_data_stream_3_V_full_n => dst_mat_data_stream_3_V_full_n,
        p_dst_data_stream_3_V_write => filt_Resize_U0_p_dst_data_stream_3_V_write,
        p_dst_rows_V_out_din => filt_Resize_U0_p_dst_rows_V_out_din,
        p_dst_rows_V_out_full_n => dst_mat_rows_V_channel63_full_n,
        p_dst_rows_V_out_write => filt_Resize_U0_p_dst_rows_V_out_write,
        p_dst_cols_V_out_din => filt_Resize_U0_p_dst_cols_V_out_din,
        p_dst_cols_V_out_full_n => dst_mat_cols_V_channel64_full_n,
        p_dst_cols_V_out_write => filt_Resize_U0_p_dst_cols_V_out_write);

    filt_Mat2AXIvideo_U0 : component filt_Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => filt_Mat2AXIvideo_U0_ap_start,
        ap_done => filt_Mat2AXIvideo_U0_ap_done,
        ap_continue => filt_Mat2AXIvideo_U0_ap_continue,
        ap_idle => filt_Mat2AXIvideo_U0_ap_idle,
        ap_ready => filt_Mat2AXIvideo_U0_ap_ready,
        img_rows_V_dout => dst_mat_rows_V_channel63_dout,
        img_rows_V_empty_n => dst_mat_rows_V_channel63_empty_n,
        img_rows_V_read => filt_Mat2AXIvideo_U0_img_rows_V_read,
        img_cols_V_dout => dst_mat_cols_V_channel64_dout,
        img_cols_V_empty_n => dst_mat_cols_V_channel64_empty_n,
        img_cols_V_read => filt_Mat2AXIvideo_U0_img_cols_V_read,
        img_data_stream_0_V_dout => dst_mat_data_stream_0_V_dout,
        img_data_stream_0_V_empty_n => dst_mat_data_stream_0_V_empty_n,
        img_data_stream_0_V_read => filt_Mat2AXIvideo_U0_img_data_stream_0_V_read,
        img_data_stream_1_V_dout => dst_mat_data_stream_1_V_dout,
        img_data_stream_1_V_empty_n => dst_mat_data_stream_1_V_empty_n,
        img_data_stream_1_V_read => filt_Mat2AXIvideo_U0_img_data_stream_1_V_read,
        img_data_stream_2_V_dout => dst_mat_data_stream_2_V_dout,
        img_data_stream_2_V_empty_n => dst_mat_data_stream_2_V_empty_n,
        img_data_stream_2_V_read => filt_Mat2AXIvideo_U0_img_data_stream_2_V_read,
        img_data_stream_3_V_dout => dst_mat_data_stream_3_V_dout,
        img_data_stream_3_V_empty_n => dst_mat_data_stream_3_V_empty_n,
        img_data_stream_3_V_read => filt_Mat2AXIvideo_U0_img_data_stream_3_V_read,
        dst_axi_TDATA => filt_Mat2AXIvideo_U0_dst_axi_TDATA,
        dst_axi_TVALID => filt_Mat2AXIvideo_U0_dst_axi_TVALID,
        dst_axi_TREADY => dst_axi_TREADY,
        dst_axi_TKEEP => filt_Mat2AXIvideo_U0_dst_axi_TKEEP,
        dst_axi_TSTRB => filt_Mat2AXIvideo_U0_dst_axi_TSTRB,
        dst_axi_TUSER => filt_Mat2AXIvideo_U0_dst_axi_TUSER,
        dst_axi_TLAST => filt_Mat2AXIvideo_U0_dst_axi_TLAST,
        dst_axi_TID => filt_Mat2AXIvideo_U0_dst_axi_TID,
        dst_axi_TDEST => filt_Mat2AXIvideo_U0_dst_axi_TDEST);

    src_mat_rows_V_channel_U : component FIFO_filt_src_mat_rows_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Block_codeRepl42_proc_U0_src_mat_rows_V_out_din,
        if_full_n => src_mat_rows_V_channel_full_n,
        if_write => filt_Block_codeRepl42_proc_U0_src_mat_rows_V_out_write,
        if_dout => src_mat_rows_V_channel_dout,
        if_empty_n => src_mat_rows_V_channel_empty_n,
        if_read => filt_AXIvideo2Mat_U0_img_rows_V_read);

    src_mat_cols_V_channel_U : component FIFO_filt_src_mat_cols_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Block_codeRepl42_proc_U0_src_mat_cols_V_out_din,
        if_full_n => src_mat_cols_V_channel_full_n,
        if_write => filt_Block_codeRepl42_proc_U0_src_mat_cols_V_out_write,
        if_dout => src_mat_cols_V_channel_dout,
        if_empty_n => src_mat_cols_V_channel_empty_n,
        if_read => filt_AXIvideo2Mat_U0_img_cols_V_read);

    dst_mat_rows_V_channel_U : component FIFO_filt_dst_mat_rows_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Block_codeRepl42_proc_U0_dst_mat_rows_V_out_din,
        if_full_n => dst_mat_rows_V_channel_full_n,
        if_write => filt_Block_codeRepl42_proc_U0_dst_mat_rows_V_out_write,
        if_dout => dst_mat_rows_V_channel_dout,
        if_empty_n => dst_mat_rows_V_channel_empty_n,
        if_read => filt_Resize_U0_p_dst_rows_V_read);

    dst_mat_cols_V_channel_U : component FIFO_filt_dst_mat_cols_V_channel
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Block_codeRepl42_proc_U0_dst_mat_cols_V_out_din,
        if_full_n => dst_mat_cols_V_channel_full_n,
        if_write => filt_Block_codeRepl42_proc_U0_dst_mat_cols_V_out_write,
        if_dout => dst_mat_cols_V_channel_dout,
        if_empty_n => dst_mat_cols_V_channel_empty_n,
        if_read => filt_Resize_U0_p_dst_cols_V_read);

    src_mat_data_stream_0_V_U : component FIFO_filt_src_mat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AXIvideo2Mat_U0_img_data_stream_0_V_din,
        if_full_n => src_mat_data_stream_0_V_full_n,
        if_write => filt_AXIvideo2Mat_U0_img_data_stream_0_V_write,
        if_dout => src_mat_data_stream_0_V_dout,
        if_empty_n => src_mat_data_stream_0_V_empty_n,
        if_read => filt_Split_240_320_6144_0_U0_src_data_stream_0_V_read);

    src_mat_data_stream_1_V_U : component FIFO_filt_src_mat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AXIvideo2Mat_U0_img_data_stream_1_V_din,
        if_full_n => src_mat_data_stream_1_V_full_n,
        if_write => filt_AXIvideo2Mat_U0_img_data_stream_1_V_write,
        if_dout => src_mat_data_stream_1_V_dout,
        if_empty_n => src_mat_data_stream_1_V_empty_n,
        if_read => filt_Split_240_320_6144_0_U0_src_data_stream_1_V_read);

    src_mat_data_stream_2_V_U : component FIFO_filt_src_mat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AXIvideo2Mat_U0_img_data_stream_2_V_din,
        if_full_n => src_mat_data_stream_2_V_full_n,
        if_write => filt_AXIvideo2Mat_U0_img_data_stream_2_V_write,
        if_dout => src_mat_data_stream_2_V_dout,
        if_empty_n => src_mat_data_stream_2_V_empty_n,
        if_read => filt_Split_240_320_6144_0_U0_src_data_stream_2_V_read);

    src_mat_data_stream_3_V_U : component FIFO_filt_src_mat_data_stream_3_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AXIvideo2Mat_U0_img_data_stream_3_V_din,
        if_full_n => src_mat_data_stream_3_V_full_n,
        if_write => filt_AXIvideo2Mat_U0_img_data_stream_3_V_write,
        if_dout => src_mat_data_stream_3_V_dout,
        if_empty_n => src_mat_data_stream_3_V_empty_n,
        if_read => filt_Split_240_320_6144_0_U0_src_data_stream_3_V_read);

    src_mat_rows_V_channel61_U : component FIFO_filt_src_mat_rows_V_channel61
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => src_mat_rows_V_channel61_full_n,
        if_write => filt_AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => src_mat_rows_V_channel61_dout,
        if_empty_n => src_mat_rows_V_channel61_empty_n,
        if_read => filt_Split_240_320_6144_0_U0_src_rows_V_read);

    src_mat_cols_V_channel62_U : component FIFO_filt_src_mat_cols_V_channel62
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => src_mat_cols_V_channel62_full_n,
        if_write => filt_AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => src_mat_cols_V_channel62_dout,
        if_empty_n => src_mat_cols_V_channel62_empty_n,
        if_read => filt_Split_240_320_6144_0_U0_src_cols_V_read);

    src_chs_0_data_stream_0_V_U : component FIFO_filt_src_chs_0_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Split_240_320_6144_0_U0_dst0_data_stream_V_din,
        if_full_n => src_chs_0_data_stream_0_V_full_n,
        if_write => filt_Split_240_320_6144_0_U0_dst0_data_stream_V_write,
        if_dout => src_chs_0_data_stream_0_V_dout,
        if_empty_n => src_chs_0_data_stream_0_V_empty_n,
        if_read => filt_Merge_240_320_0_4096_U0_src0_data_stream_V_read);

    src_chs_1_data_stream_0_V_U : component FIFO_filt_src_chs_1_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Split_240_320_6144_0_U0_dst1_data_stream_V_din,
        if_full_n => src_chs_1_data_stream_0_V_full_n,
        if_write => filt_Split_240_320_6144_0_U0_dst1_data_stream_V_write,
        if_dout => src_chs_1_data_stream_0_V_dout,
        if_empty_n => src_chs_1_data_stream_0_V_empty_n,
        if_read => filt_Merge_240_320_0_4096_U0_src1_data_stream_V_read);

    src_chs_2_data_stream_0_V_U : component FIFO_filt_src_chs_2_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Split_240_320_6144_0_U0_dst2_data_stream_V_din,
        if_full_n => src_chs_2_data_stream_0_V_full_n,
        if_write => filt_Split_240_320_6144_0_U0_dst2_data_stream_V_write,
        if_dout => src_chs_2_data_stream_0_V_dout,
        if_empty_n => src_chs_2_data_stream_0_V_empty_n,
        if_read => filt_Merge_240_320_0_4096_U0_src2_data_stream_V_read);

    src_chs_3_data_stream_0_V_U : component FIFO_filt_src_chs_3_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Split_240_320_6144_0_U0_dst3_data_stream_V_din,
        if_full_n => src_chs_3_data_stream_0_V_full_n,
        if_write => filt_Split_240_320_6144_0_U0_dst3_data_stream_V_write,
        if_dout => src_chs_3_data_stream_0_V_dout,
        if_empty_n => src_chs_3_data_stream_0_V_empty_n,
        if_read => filt_Merge_240_320_0_6144_U0_src3_data_stream_V_read);

    wrk_src_mat_data_stream_0_V_U : component FIFO_filt_wrk_src_mat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Merge_240_320_0_4096_U0_dst_data_stream_0_V_din,
        if_full_n => wrk_src_mat_data_stream_0_V_full_n,
        if_write => filt_Merge_240_320_0_4096_U0_dst_data_stream_0_V_write,
        if_dout => wrk_src_mat_data_stream_0_V_dout,
        if_empty_n => wrk_src_mat_data_stream_0_V_empty_n,
        if_read => filt_AddS_U0_src_data_stream_0_V_read);

    wrk_src_mat_data_stream_1_V_U : component FIFO_filt_wrk_src_mat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Merge_240_320_0_4096_U0_dst_data_stream_1_V_din,
        if_full_n => wrk_src_mat_data_stream_1_V_full_n,
        if_write => filt_Merge_240_320_0_4096_U0_dst_data_stream_1_V_write,
        if_dout => wrk_src_mat_data_stream_1_V_dout,
        if_empty_n => wrk_src_mat_data_stream_1_V_empty_n,
        if_read => filt_AddS_U0_src_data_stream_1_V_read);

    wrk_src_mat_data_stream_2_V_U : component FIFO_filt_wrk_src_mat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Merge_240_320_0_4096_U0_dst_data_stream_2_V_din,
        if_full_n => wrk_src_mat_data_stream_2_V_full_n,
        if_write => filt_Merge_240_320_0_4096_U0_dst_data_stream_2_V_write,
        if_dout => wrk_src_mat_data_stream_2_V_dout,
        if_empty_n => wrk_src_mat_data_stream_2_V_empty_n,
        if_read => filt_AddS_U0_src_data_stream_2_V_read);

    wrk_dst_mat_data_stream_0_V_U : component FIFO_filt_wrk_dst_mat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AddS_U0_dst_data_stream_0_V_din,
        if_full_n => wrk_dst_mat_data_stream_0_V_full_n,
        if_write => filt_AddS_U0_dst_data_stream_0_V_write,
        if_dout => wrk_dst_mat_data_stream_0_V_dout,
        if_empty_n => wrk_dst_mat_data_stream_0_V_empty_n,
        if_read => filt_Split_240_320_4096_0_U0_src_data_stream_0_V_read);

    wrk_dst_mat_data_stream_1_V_U : component FIFO_filt_wrk_dst_mat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AddS_U0_dst_data_stream_1_V_din,
        if_full_n => wrk_dst_mat_data_stream_1_V_full_n,
        if_write => filt_AddS_U0_dst_data_stream_1_V_write,
        if_dout => wrk_dst_mat_data_stream_1_V_dout,
        if_empty_n => wrk_dst_mat_data_stream_1_V_empty_n,
        if_read => filt_Split_240_320_4096_0_U0_src_data_stream_1_V_read);

    wrk_dst_mat_data_stream_2_V_U : component FIFO_filt_wrk_dst_mat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_AddS_U0_dst_data_stream_2_V_din,
        if_full_n => wrk_dst_mat_data_stream_2_V_full_n,
        if_write => filt_AddS_U0_dst_data_stream_2_V_write,
        if_dout => wrk_dst_mat_data_stream_2_V_dout,
        if_empty_n => wrk_dst_mat_data_stream_2_V_empty_n,
        if_read => filt_Split_240_320_4096_0_U0_src_data_stream_2_V_read);

    dst_chs_0_data_stream_0_V_U : component FIFO_filt_dst_chs_0_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Split_240_320_4096_0_U0_dst0_data_stream_V_din,
        if_full_n => dst_chs_0_data_stream_0_V_full_n,
        if_write => filt_Split_240_320_4096_0_U0_dst0_data_stream_V_write,
        if_dout => dst_chs_0_data_stream_0_V_dout,
        if_empty_n => dst_chs_0_data_stream_0_V_empty_n,
        if_read => filt_Merge_240_320_0_6144_U0_src0_data_stream_V_read);

    dst_chs_1_data_stream_0_V_U : component FIFO_filt_dst_chs_1_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Split_240_320_4096_0_U0_dst1_data_stream_V_din,
        if_full_n => dst_chs_1_data_stream_0_V_full_n,
        if_write => filt_Split_240_320_4096_0_U0_dst1_data_stream_V_write,
        if_dout => dst_chs_1_data_stream_0_V_dout,
        if_empty_n => dst_chs_1_data_stream_0_V_empty_n,
        if_read => filt_Merge_240_320_0_6144_U0_src1_data_stream_V_read);

    dst_chs_2_data_stream_0_V_U : component FIFO_filt_dst_chs_2_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Split_240_320_4096_0_U0_dst2_data_stream_V_din,
        if_full_n => dst_chs_2_data_stream_0_V_full_n,
        if_write => filt_Split_240_320_4096_0_U0_dst2_data_stream_V_write,
        if_dout => dst_chs_2_data_stream_0_V_dout,
        if_empty_n => dst_chs_2_data_stream_0_V_empty_n,
        if_read => filt_Merge_240_320_0_6144_U0_src2_data_stream_V_read);

    fin_mat_data_stream_0_V_U : component FIFO_filt_fin_mat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_0_V_din,
        if_full_n => fin_mat_data_stream_0_V_full_n,
        if_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_0_V_write,
        if_dout => fin_mat_data_stream_0_V_dout,
        if_empty_n => fin_mat_data_stream_0_V_empty_n,
        if_read => filt_Resize_U0_p_src_data_stream_0_V_read);

    fin_mat_data_stream_1_V_U : component FIFO_filt_fin_mat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_1_V_din,
        if_full_n => fin_mat_data_stream_1_V_full_n,
        if_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_1_V_write,
        if_dout => fin_mat_data_stream_1_V_dout,
        if_empty_n => fin_mat_data_stream_1_V_empty_n,
        if_read => filt_Resize_U0_p_src_data_stream_1_V_read);

    fin_mat_data_stream_2_V_U : component FIFO_filt_fin_mat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_2_V_din,
        if_full_n => fin_mat_data_stream_2_V_full_n,
        if_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_2_V_write,
        if_dout => fin_mat_data_stream_2_V_dout,
        if_empty_n => fin_mat_data_stream_2_V_empty_n,
        if_read => filt_Resize_U0_p_src_data_stream_2_V_read);

    fin_mat_data_stream_3_V_U : component FIFO_filt_fin_mat_data_stream_3_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Merge_240_320_0_6144_U0_dst_data_stream_3_V_din,
        if_full_n => fin_mat_data_stream_3_V_full_n,
        if_write => filt_Merge_240_320_0_6144_U0_dst_data_stream_3_V_write,
        if_dout => fin_mat_data_stream_3_V_dout,
        if_empty_n => fin_mat_data_stream_3_V_empty_n,
        if_read => filt_Resize_U0_p_src_data_stream_3_V_read);

    dst_mat_data_stream_0_V_U : component FIFO_filt_dst_mat_data_stream_0_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Resize_U0_p_dst_data_stream_0_V_din,
        if_full_n => dst_mat_data_stream_0_V_full_n,
        if_write => filt_Resize_U0_p_dst_data_stream_0_V_write,
        if_dout => dst_mat_data_stream_0_V_dout,
        if_empty_n => dst_mat_data_stream_0_V_empty_n,
        if_read => filt_Mat2AXIvideo_U0_img_data_stream_0_V_read);

    dst_mat_data_stream_1_V_U : component FIFO_filt_dst_mat_data_stream_1_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Resize_U0_p_dst_data_stream_1_V_din,
        if_full_n => dst_mat_data_stream_1_V_full_n,
        if_write => filt_Resize_U0_p_dst_data_stream_1_V_write,
        if_dout => dst_mat_data_stream_1_V_dout,
        if_empty_n => dst_mat_data_stream_1_V_empty_n,
        if_read => filt_Mat2AXIvideo_U0_img_data_stream_1_V_read);

    dst_mat_data_stream_2_V_U : component FIFO_filt_dst_mat_data_stream_2_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Resize_U0_p_dst_data_stream_2_V_din,
        if_full_n => dst_mat_data_stream_2_V_full_n,
        if_write => filt_Resize_U0_p_dst_data_stream_2_V_write,
        if_dout => dst_mat_data_stream_2_V_dout,
        if_empty_n => dst_mat_data_stream_2_V_empty_n,
        if_read => filt_Mat2AXIvideo_U0_img_data_stream_2_V_read);

    dst_mat_data_stream_3_V_U : component FIFO_filt_dst_mat_data_stream_3_V
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Resize_U0_p_dst_data_stream_3_V_din,
        if_full_n => dst_mat_data_stream_3_V_full_n,
        if_write => filt_Resize_U0_p_dst_data_stream_3_V_write,
        if_dout => dst_mat_data_stream_3_V_dout,
        if_empty_n => dst_mat_data_stream_3_V_empty_n,
        if_read => filt_Mat2AXIvideo_U0_img_data_stream_3_V_read);

    dst_mat_rows_V_channel63_U : component FIFO_filt_dst_mat_rows_V_channel63
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Resize_U0_p_dst_rows_V_out_din,
        if_full_n => dst_mat_rows_V_channel63_full_n,
        if_write => filt_Resize_U0_p_dst_rows_V_out_write,
        if_dout => dst_mat_rows_V_channel63_dout,
        if_empty_n => dst_mat_rows_V_channel63_empty_n,
        if_read => filt_Mat2AXIvideo_U0_img_rows_V_read);

    dst_mat_cols_V_channel64_U : component FIFO_filt_dst_mat_cols_V_channel64
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => filt_Resize_U0_p_dst_cols_V_out_din,
        if_full_n => dst_mat_cols_V_channel64_full_n,
        if_write => filt_Resize_U0_p_dst_cols_V_out_write,
        if_dout => dst_mat_cols_V_channel64_dout,
        if_empty_n => dst_mat_cols_V_channel64_empty_n,
        if_read => filt_Mat2AXIvideo_U0_img_cols_V_read);





    filt_AddS_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                filt_AddS_U0_ap_start <= ap_const_logic_0;
            else
                filt_AddS_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    filt_Mat2AXIvideo_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                filt_Mat2AXIvideo_U0_ap_start <= ap_const_logic_0;
            else
                filt_Mat2AXIvideo_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    filt_Merge_240_320_0_4096_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                filt_Merge_240_320_0_4096_U0_ap_start <= ap_const_logic_0;
            else
                filt_Merge_240_320_0_4096_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    filt_Merge_240_320_0_6144_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                filt_Merge_240_320_0_6144_U0_ap_start <= ap_const_logic_0;
            else
                filt_Merge_240_320_0_6144_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    filt_Resize_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                filt_Resize_U0_ap_start <= ap_const_logic_0;
            else
                filt_Resize_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    filt_Split_240_320_4096_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                filt_Split_240_320_4096_0_U0_ap_start <= ap_const_logic_0;
            else
                filt_Split_240_320_4096_0_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;


    filt_Split_240_320_6144_0_U0_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                filt_Split_240_320_6144_0_U0_ap_start <= ap_const_logic_0;
            else
                filt_Split_240_320_6144_0_U0_ap_start <= ap_const_logic_1;
            end if;
        end if;
    end process;

    ap_done <= ap_sig_hs_done;

    ap_idle_assign_proc : process(filt_Block_codeRepl42_proc_U0_ap_idle, filt_AXIvideo2Mat_U0_ap_idle, filt_Split_240_320_6144_0_U0_ap_idle, filt_Merge_240_320_0_4096_U0_ap_idle, filt_AddS_U0_ap_idle, filt_Split_240_320_4096_0_U0_ap_idle, filt_Merge_240_320_0_6144_U0_ap_idle, filt_Resize_U0_ap_idle, filt_Mat2AXIvideo_U0_ap_idle)
    begin
        if (((ap_const_logic_1 = filt_Block_codeRepl42_proc_U0_ap_idle) and (ap_const_logic_1 = filt_AXIvideo2Mat_U0_ap_idle) and (ap_const_logic_1 = filt_Split_240_320_6144_0_U0_ap_idle) and (ap_const_logic_1 = filt_Merge_240_320_0_4096_U0_ap_idle) and (ap_const_logic_1 = filt_AddS_U0_ap_idle) and (ap_const_logic_1 = filt_Split_240_320_4096_0_U0_ap_idle) and (ap_const_logic_1 = filt_Merge_240_320_0_6144_U0_ap_idle) and (ap_const_logic_1 = filt_Resize_U0_ap_idle) and (ap_const_logic_1 = filt_Mat2AXIvideo_U0_ap_idle))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= filt_AXIvideo2Mat_U0_ap_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sig_hs_continue <= ap_const_logic_1;

    ap_sig_hs_done_assign_proc : process(filt_Mat2AXIvideo_U0_ap_done)
    begin
        if ((ap_const_logic_1 = filt_Mat2AXIvideo_U0_ap_done)) then 
            ap_sig_hs_done <= ap_const_logic_1;
        else 
            ap_sig_hs_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_sig_hs_ready <= filt_AXIvideo2Mat_U0_ap_ready;
    dst_axi_TDATA <= filt_Mat2AXIvideo_U0_dst_axi_TDATA;
    dst_axi_TDEST <= filt_Mat2AXIvideo_U0_dst_axi_TDEST;
    dst_axi_TID <= filt_Mat2AXIvideo_U0_dst_axi_TID;
    dst_axi_TKEEP <= filt_Mat2AXIvideo_U0_dst_axi_TKEEP;
    dst_axi_TLAST <= filt_Mat2AXIvideo_U0_dst_axi_TLAST;
    dst_axi_TSTRB <= filt_Mat2AXIvideo_U0_dst_axi_TSTRB;
    dst_axi_TUSER <= filt_Mat2AXIvideo_U0_dst_axi_TUSER;
    dst_axi_TVALID <= filt_Mat2AXIvideo_U0_dst_axi_TVALID;
    filt_AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    filt_AXIvideo2Mat_U0_ap_start <= ap_start;
    filt_AddS_U0_ap_continue <= ap_const_logic_1;
    filt_Block_codeRepl42_proc_U0_ap_continue <= ap_const_logic_1;
    filt_Block_codeRepl42_proc_U0_ap_start <= ap_start;
    filt_Mat2AXIvideo_U0_ap_continue <= ap_const_logic_1;
    filt_Merge_240_320_0_4096_U0_ap_continue <= ap_const_logic_1;
    filt_Merge_240_320_0_6144_U0_ap_continue <= ap_const_logic_1;
    filt_Resize_U0_ap_continue <= ap_const_logic_1;
    filt_Split_240_320_4096_0_U0_ap_continue <= ap_const_logic_1;
    filt_Split_240_320_6144_0_U0_ap_continue <= ap_const_logic_1;
    src_axi_TREADY <= filt_AXIvideo2Mat_U0_src_axi_TREADY;
end behav;
